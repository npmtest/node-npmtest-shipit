{"/home/travis/build/npmtest/node-npmtest-shipit/test.js":"/* istanbul instrument in package npmtest_shipit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-shipit/lib.npmtest_shipit.js":"/* istanbul instrument in package npmtest_shipit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_shipit = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_shipit = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-shipit/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-shipit && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_shipit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_shipit\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_shipit.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_shipit.rollup.js'] =\n            local.assetsDict['/assets.npmtest_shipit.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_shipit.__dirname + '/lib.npmtest_shipit.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/main.js":"(function() {\n  var A1Client, AmazonClient, CanadaPostClient, DhlClient, DhlGmClient, FedexClient, LasershipClient, OnTracClient, PrestigeClient, UpsClient, UpsMiClient, UspsClient, guessCarrier;\n\n  UpsClient = require('./ups').UpsClient;\n\n  FedexClient = require('./fedex').FedexClient;\n\n  UspsClient = require('./usps').UspsClient;\n\n  LasershipClient = require('./lasership').LasershipClient;\n\n  DhlClient = require('./dhl').DhlClient;\n\n  OnTracClient = require('./ontrac').OnTracClient;\n\n  UpsMiClient = require('./upsmi').UpsMiClient;\n\n  AmazonClient = require('./amazon').AmazonClient;\n\n  A1Client = require('./a1').A1Client;\n\n  CanadaPostClient = require('./canada_post').CanadaPostClient;\n\n  DhlGmClient = require('./dhlgm').DhlGmClient;\n\n  PrestigeClient = require('./prestige').PrestigeClient;\n\n  guessCarrier = require('./guessCarrier');\n\n  module.exports = {\n    UpsClient: UpsClient,\n    FedexClient: FedexClient,\n    UspsClient: UspsClient,\n    LasershipClient: LasershipClient,\n    DhlClient: DhlClient,\n    OnTracClient: OnTracClient,\n    UpsMiClient: UpsMiClient,\n    AmazonClient: AmazonClient,\n    A1Client: A1Client,\n    CanadaPostClient: CanadaPostClient,\n    DhlGmClient: DhlGmClient,\n    PrestigeClient: PrestigeClient,\n    guessCarrier: guessCarrier\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/ups.js":"(function() {\n  var Builder, Parser, ShipperClient, UpsClient, lowerCase, moment, request, titleCase, upperCaseFirst, _ref, _ref1,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('xml2js'), Builder = _ref.Builder, Parser = _ref.Parser;\n\n  request = require('request');\n\n  moment = require('moment-timezone');\n\n  _ref1 = require('change-case'), titleCase = _ref1.titleCase, upperCaseFirst = _ref1.upperCaseFirst, lowerCase = _ref1.lowerCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  UpsClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(UpsClient, _super);\n\n    function UpsClient(_arg, options) {\n      this.licenseNumber = _arg.licenseNumber, this.userId = _arg.userId, this.password = _arg.password;\n      this.options = options;\n      UpsClient.__super__.constructor.apply(this, arguments);\n      this.parser = new Parser();\n      this.builder = new Builder({\n        renderOpts: {\n          pretty: false\n        }\n      });\n    }\n\n    UpsClient.prototype.generateRequest = function(trk, reference) {\n      var accessRequest, trackRequest;\n      if (reference == null) {\n        reference = 'n/a';\n      }\n      accessRequest = this.builder.buildObject({\n        'AccessRequest': {\n          'AccessLicenseNumber': this.licenseNumber,\n          'UserId': this.userId,\n          'Password': this.password\n        }\n      });\n      trackRequest = this.builder.buildObject({\n        'TrackRequest': {\n          'Request': {\n            'TransactionReference': {\n              'CustomerContext': reference\n            },\n            'RequestAction': 'track',\n            'RequestOption': 3\n          },\n          'TrackingNumber': trk\n        }\n      });\n      return \"\" + accessRequest + trackRequest;\n    };\n\n    UpsClient.prototype.validateResponse = function(response, cb) {\n      var handleResponse;\n      handleResponse = function(xmlErr, trackResult) {\n        var error, errorMsg, responseStatus, shipment, _ref10, _ref11, _ref12, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n        if ((xmlErr != null) || (trackResult == null)) {\n          return cb(xmlErr);\n        }\n        responseStatus = (_ref2 = trackResult['TrackResponse']) != null ? (_ref3 = _ref2['Response']) != null ? (_ref4 = _ref3[0]) != null ? (_ref5 = _ref4['ResponseStatusDescription']) != null ? _ref5[0] : void 0 : void 0 : void 0 : void 0;\n        if (responseStatus !== 'Success') {\n          error = (_ref6 = trackResult['TrackResponse']) != null ? (_ref7 = _ref6['Response']) != null ? (_ref8 = _ref7[0]) != null ? (_ref9 = _ref8['Error']) != null ? (_ref10 = _ref9[0]) != null ? (_ref11 = _ref10['ErrorDescription']) != null ? _ref11[0] : void 0 : void 0 : void 0 : void 0 : void 0 : void 0;\n          errorMsg = error || \"unknown error\";\n          shipment = null;\n        } else {\n          shipment = (_ref12 = trackResult['TrackResponse']['Shipment']) != null ? _ref12[0] : void 0;\n          if (shipment == null) {\n            errorMsg = \"missing shipment data\";\n          }\n        }\n        if (errorMsg != null) {\n          return cb(errorMsg);\n        }\n        return cb(null, shipment);\n      };\n      this.parser.reset();\n      return this.parser.parseString(response, handleResponse);\n    };\n\n    UpsClient.prototype.getEta = function(shipment) {\n      var _ref2, _ref3, _ref4, _ref5;\n      return this.presentTimestamp(((_ref2 = shipment['Package']) != null ? (_ref3 = _ref2[0]) != null ? (_ref4 = _ref3['RescheduledDeliveryDate']) != null ? _ref4[0] : void 0 : void 0 : void 0) || ((_ref5 = shipment['ScheduledDeliveryDate']) != null ? _ref5[0] : void 0));\n    };\n\n    UpsClient.prototype.getService = function(shipment) {\n      var service, _ref2, _ref3, _ref4;\n      if (service = (_ref2 = shipment['Service']) != null ? (_ref3 = _ref2[0]) != null ? (_ref4 = _ref3['Description']) != null ? _ref4[0] : void 0 : void 0 : void 0) {\n        return titleCase(service);\n      }\n    };\n\n    UpsClient.prototype.getWeight = function(shipment) {\n      var units, weight, weightData, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8;\n      weight = null;\n      if (weightData = (_ref2 = shipment['Package']) != null ? (_ref3 = _ref2[0]) != null ? (_ref4 = _ref3['PackageWeight']) != null ? _ref4[0] : void 0 : void 0 : void 0) {\n        weight = (_ref5 = weightData['Weight']) != null ? _ref5[0] : void 0;\n        if ((weight != null) && (units = (_ref6 = weightData['UnitOfMeasurement']) != null ? (_ref7 = _ref6[0]) != null ? (_ref8 = _ref7['Code']) != null ? _ref8[0] : void 0 : void 0 : void 0)) {\n          weight = \"\" + weight + \" \" + units;\n        }\n      }\n      return weight;\n    };\n\n    UpsClient.prototype.presentTimestamp = function(dateString, timeString) {\n      var formatSpec;\n      if (dateString == null) {\n        return;\n      }\n      if (timeString == null) {\n        timeString = '00:00:00';\n      }\n      formatSpec = 'YYYYMMDD HHmmss ZZ';\n      return moment(\"\" + dateString + \" \" + timeString + \" +0000\", formatSpec).toDate();\n    };\n\n    UpsClient.prototype.presentAddress = function(rawAddress) {\n      var city, countryCode, postalCode, stateCode, _ref2, _ref3, _ref4, _ref5;\n      if (!rawAddress) {\n        return;\n      }\n      city = (_ref2 = rawAddress['City']) != null ? _ref2[0] : void 0;\n      stateCode = (_ref3 = rawAddress['StateProvinceCode']) != null ? _ref3[0] : void 0;\n      countryCode = (_ref4 = rawAddress['CountryCode']) != null ? _ref4[0] : void 0;\n      postalCode = (_ref5 = rawAddress['PostalCode']) != null ? _ref5[0] : void 0;\n      return this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        countryCode: countryCode,\n        postalCode: postalCode\n      });\n    };\n\n    STATUS_MAP = {\n      'D': ShipperClient.STATUS_TYPES.DELIVERED,\n      'P': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'M': ShipperClient.STATUS_TYPES.SHIPPING\n    };\n\n    UpsClient.prototype.presentStatus = function(status) {\n      var statusCode, statusType, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;\n      if (status == null) {\n        return ShipperClient.STATUS_TYPES.UNKNOWN;\n      }\n      statusType = (_ref2 = status['StatusType']) != null ? (_ref3 = _ref2[0]) != null ? (_ref4 = _ref3['Code']) != null ? _ref4[0] : void 0 : void 0 : void 0;\n      statusCode = (_ref5 = status['StatusCode']) != null ? (_ref6 = _ref5[0]) != null ? (_ref7 = _ref6['Code']) != null ? _ref7[0] : void 0 : void 0 : void 0;\n      if (STATUS_MAP[statusType] != null) {\n        return STATUS_MAP[statusType];\n      }\n      switch (statusType) {\n        case 'I':\n          switch (statusCode) {\n            case 'OF':\n              return ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY;\n            default:\n              return ShipperClient.STATUS_TYPES.EN_ROUTE;\n          }\n          break;\n        case 'X':\n          switch (statusCode) {\n            case 'U2':\n              return ShipperClient.STATUS_TYPES.EN_ROUTE;\n            default:\n              return ShipperClient.STATUS_TYPES.DELAYED;\n          }\n          break;\n        default:\n          return ShipperClient.STATUS_TYPES.UNKNOWN;\n      }\n    };\n\n    UpsClient.prototype.getDestination = function(shipment) {\n      var _ref2, _ref3, _ref4;\n      return this.presentAddress((_ref2 = shipment['ShipTo']) != null ? (_ref3 = _ref2[0]) != null ? (_ref4 = _ref3['Address']) != null ? _ref4[0] : void 0 : void 0 : void 0);\n    };\n\n    UpsClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, details, lastStatus, location, rawActivities, rawActivity, status, statusObj, timestamp, _i, _len, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19, _ref2, _ref20, _ref21, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n      activities = [];\n      status = null;\n      rawActivities = shipment != null ? (_ref2 = shipment['Package']) != null ? (_ref3 = _ref2[0]) != null ? _ref3['Activity'] : void 0 : void 0 : void 0;\n      _ref4 = rawActivities || [];\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        rawActivity = _ref4[_i];\n        location = this.presentAddress((_ref5 = rawActivity['ActivityLocation']) != null ? (_ref6 = _ref5[0]) != null ? (_ref7 = _ref6['Address']) != null ? _ref7[0] : void 0 : void 0 : void 0);\n        timestamp = this.presentTimestamp((_ref8 = rawActivity['Date']) != null ? _ref8[0] : void 0, (_ref9 = rawActivity['Time']) != null ? _ref9[0] : void 0);\n        lastStatus = (_ref10 = rawActivity['Status']) != null ? _ref10[0] : void 0;\n        details = lastStatus != null ? (_ref11 = lastStatus['StatusType']) != null ? (_ref12 = _ref11[0]) != null ? (_ref13 = _ref12['Description']) != null ? _ref13[0] : void 0 : void 0 : void 0 : void 0;\n        if ((details != null) && (timestamp != null)) {\n          details = upperCaseFirst(lowerCase(details));\n          activity = {\n            timestamp: timestamp,\n            location: location,\n            details: details\n          };\n          if (statusObj = (_ref14 = rawActivity['Status']) != null ? _ref14[0] : void 0) {\n            activity.statusType = (_ref15 = statusObj['StatusType']) != null ? (_ref16 = _ref15[0]) != null ? (_ref17 = _ref16['Code']) != null ? _ref17[0] : void 0 : void 0 : void 0;\n            activity.statusCode = (_ref18 = statusObj['StatusCode']) != null ? (_ref19 = _ref18[0]) != null ? (_ref20 = _ref19['Code']) != null ? _ref20[0] : void 0 : void 0 : void 0;\n          }\n          activities.push(activity);\n        }\n        if (!status) {\n          status = this.presentStatus((_ref21 = rawActivity['Status']) != null ? _ref21[0] : void 0);\n        }\n      }\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    UpsClient.prototype.requestOptions = function(_arg) {\n      var hostname, reference, test, trackingNumber;\n      trackingNumber = _arg.trackingNumber, reference = _arg.reference, test = _arg.test;\n      hostname = test ? 'wwwcie.ups.com' : 'www.ups.com';\n      return {\n        method: 'POST',\n        uri: \"https://\" + hostname + \"/ups.app/xml/Track\",\n        body: this.generateRequest(trackingNumber, reference)\n      };\n    };\n\n    return UpsClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    UpsClient: UpsClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/shipper.js":"(function() {\n  var ShipperClient, moment, request, titleCase;\n\n  titleCase = require('change-case').titleCase;\n\n  request = require('request');\n\n  moment = require('moment-timezone');\n\n  ShipperClient = (function() {\n    function ShipperClient() {}\n\n    ShipperClient.STATUS_TYPES = {\n      UNKNOWN: 0,\n      SHIPPING: 1,\n      EN_ROUTE: 2,\n      OUT_FOR_DELIVERY: 3,\n      DELIVERED: 4,\n      DELAYED: 5\n    };\n\n    ShipperClient.prototype.presentPostalCode = function(rawCode) {\n      rawCode = rawCode != null ? rawCode.trim() : void 0;\n      if (/^\\d{9}$/.test(rawCode)) {\n        return \"\" + rawCode.slice(0, 5) + \"-\" + rawCode.slice(5);\n      } else {\n        return rawCode;\n      }\n    };\n\n    ShipperClient.prototype.presentLocationString = function(location) {\n      var field, newFields, _i, _len, _ref;\n      newFields = [];\n      _ref = (location != null ? location.split(',') : void 0) || [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        field = _ref[_i];\n        field = field.trim();\n        if (field.length > 2) {\n          field = titleCase(field);\n        }\n        newFields.push(field);\n      }\n      return newFields.join(', ');\n    };\n\n    ShipperClient.prototype.presentLocation = function(_arg) {\n      var address, city, countryCode, postalCode, stateCode;\n      city = _arg.city, stateCode = _arg.stateCode, countryCode = _arg.countryCode, postalCode = _arg.postalCode;\n      if (city != null ? city.length : void 0) {\n        city = titleCase(city);\n      }\n      if (stateCode != null ? stateCode.length : void 0) {\n        stateCode = stateCode.trim();\n        if (stateCode.length > 3) {\n          stateCode = titleCase(stateCode);\n        }\n        if (city != null ? city.length : void 0) {\n          city = city.trim();\n          address = \"\" + city + \", \" + stateCode;\n        } else {\n          address = stateCode;\n        }\n      } else {\n        address = city;\n      }\n      postalCode = this.presentPostalCode(postalCode);\n      if (countryCode != null ? countryCode.length : void 0) {\n        countryCode = countryCode.trim();\n        if (countryCode.length > 3) {\n          countryCode = titleCase(countryCode);\n        }\n        if (address != null ? address.length : void 0) {\n          address = countryCode !== 'US' ? \"\" + address + \", \" + countryCode : address;\n        } else {\n          address = countryCode;\n        }\n      }\n      if (postalCode != null ? postalCode.length : void 0) {\n        address = address != null ? \"\" + address + \" \" + postalCode : postalCode;\n      }\n      return address;\n    };\n\n    ShipperClient.prototype.presentResponse = function(response, requestData, cb) {\n      return this.validateResponse(response, (function(_this) {\n        return function(err, shipment) {\n          var activities, adjustedEta, eta, presentedResponse, status, _ref, _ref1;\n          if ((err != null) || (shipment == null)) {\n            return cb(err);\n          }\n          _ref = _this.getActivitiesAndStatus(shipment), activities = _ref.activities, status = _ref.status;\n          eta = _this.getEta(shipment);\n          if (eta != null) {\n            adjustedEta = moment(eta).utc().format().replace(/T00:00:00/, 'T23:59:59');\n          }\n          if (adjustedEta != null) {\n            adjustedEta = moment(adjustedEta).toDate();\n          }\n          presentedResponse = {\n            eta: adjustedEta,\n            service: _this.getService(shipment),\n            weight: _this.getWeight(shipment),\n            destination: _this.getDestination(shipment),\n            activities: activities,\n            status: status\n          };\n          if ((requestData != null ? requestData.raw : void 0) != null) {\n            if (requestData.raw) {\n              presentedResponse.raw = response;\n            }\n          } else {\n            if ((_ref1 = _this.options) != null ? _ref1.raw : void 0) {\n              presentedResponse.raw = response;\n            }\n          }\n          presentedResponse.request = requestData;\n          return cb(null, presentedResponse);\n        };\n      })(this));\n    };\n\n    ShipperClient.prototype.requestData = function(requestData, cb) {\n      var opts, _ref;\n      opts = this.requestOptions(requestData);\n      opts.timeout = (requestData != null ? requestData.timeout : void 0) || ((_ref = this.options) != null ? _ref.timeout : void 0);\n      return request(opts, (function(_this) {\n        return function(err, response, body) {\n          if ((body == null) || (err != null)) {\n            return cb(err);\n          }\n          if (response.statusCode !== 200) {\n            return cb(\"response status \" + response.statusCode);\n          }\n          return _this.presentResponse(body, requestData, cb);\n        };\n      })(this));\n    };\n\n    return ShipperClient;\n\n  })();\n\n  module.exports = {\n    ShipperClient: ShipperClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/fedex.js":"(function() {\n  var Builder, FedexClient, Parser, ShipperClient, find, moment, titleCase, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('xml2js'), Builder = _ref.Builder, Parser = _ref.Parser;\n\n  find = require('underscore').find;\n\n  moment = require('moment-timezone');\n\n  titleCase = require('change-case').titleCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  FedexClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(FedexClient, _super);\n\n    function FedexClient(_arg, options) {\n      this.key = _arg.key, this.password = _arg.password, this.account = _arg.account, this.meter = _arg.meter;\n      this.options = options;\n      FedexClient.__super__.constructor.apply(this, arguments);\n      this.parser = new Parser();\n      this.builder = new Builder({\n        renderOpts: {\n          pretty: false\n        }\n      });\n    }\n\n    FedexClient.prototype.generateRequest = function(trk, reference) {\n      if (reference == null) {\n        reference = 'n/a';\n      }\n      return this.builder.buildObject({\n        'ns:TrackRequest': {\n          '$': {\n            'xmlns:ns': 'http://fedex.com/ws/track/v5',\n            'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n            'xsi:schemaLocation': 'http://fedex.com/ws/track/v4 TrackService_v4.xsd'\n          },\n          'ns:WebAuthenticationDetail': {\n            'ns:UserCredential': {\n              'ns:Key': this.key,\n              'ns:Password': this.password\n            }\n          },\n          'ns:ClientDetail': {\n            'ns:AccountNumber': this.account,\n            'ns:MeterNumber': this.meter\n          },\n          'ns:TransactionDetail': {\n            'ns:CustomerTransactionId': reference\n          },\n          'ns:Version': {\n            'ns:ServiceId': 'trck',\n            'ns:Major': 5,\n            'ns:Intermediate': 0,\n            'ns:Minor': 0\n          },\n          'ns:PackageIdentifier': {\n            'ns:Value': trk,\n            'ns:Type': 'TRACKING_NUMBER_OR_DOORTAG'\n          },\n          'ns:IncludeDetailedScans': true\n        }\n      });\n    };\n\n    FedexClient.prototype.validateResponse = function(response, cb) {\n      var handleResponse;\n      handleResponse = function(xmlErr, trackResult) {\n        var notifications, success, _ref1, _ref2, _ref3;\n        if ((xmlErr != null) || (trackResult == null)) {\n          return cb(xmlErr);\n        }\n        notifications = (_ref1 = trackResult['TrackReply']) != null ? _ref1['Notifications'] : void 0;\n        success = find(notifications, function(notice) {\n          var _ref2;\n          return (notice != null ? (_ref2 = notice['Code']) != null ? _ref2[0] : void 0 : void 0) === '0';\n        });\n        if (!success) {\n          return cb(notifications || 'invalid reply');\n        }\n        return cb(null, (_ref2 = trackResult['TrackReply']) != null ? (_ref3 = _ref2['TrackDetails']) != null ? _ref3[0] : void 0 : void 0);\n      };\n      this.parser.reset();\n      return this.parser.parseString(response, handleResponse);\n    };\n\n    FedexClient.prototype.presentAddress = function(address) {\n      var city, countryCode, postalCode, stateCode, _ref1, _ref2, _ref3, _ref4;\n      if (address == null) {\n        return;\n      }\n      city = (_ref1 = address['City']) != null ? _ref1[0] : void 0;\n      if (city != null) {\n        city = city.replace('FEDEX SMARTPOST ', '');\n      }\n      stateCode = (_ref2 = address['StateOrProvinceCode']) != null ? _ref2[0] : void 0;\n      countryCode = (_ref3 = address['CountryCode']) != null ? _ref3[0] : void 0;\n      postalCode = (_ref4 = address['PostalCode']) != null ? _ref4[0] : void 0;\n      return this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        countryCode: countryCode,\n        postalCode: postalCode\n      });\n    };\n\n    STATUS_MAP = {\n      'AA': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'AD': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'AF': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'AP': ShipperClient.STATUS_TYPES.SHIPPING,\n      'EO': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'EP': ShipperClient.STATUS_TYPES.SHIPPING,\n      'FD': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'HL': ShipperClient.STATUS_TYPES.DELIVERED,\n      'IT': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'LO': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'OC': ShipperClient.STATUS_TYPES.SHIPPING,\n      'DL': ShipperClient.STATUS_TYPES.DELIVERED,\n      'DP': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'DS': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'ED': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'OD': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'PF': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'PL': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'PU': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'SF': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'AR': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'CD': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'CC': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'DE': ShipperClient.STATUS_TYPES.DELAYED,\n      'CA': ShipperClient.STATUS_TYPES.DELAYED,\n      'CH': ShipperClient.STATUS_TYPES.DELAYED,\n      'DY': ShipperClient.STATUS_TYPES.DELAYED,\n      'SE': ShipperClient.STATUS_TYPES.DELAYED,\n      'AX': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'OF': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'RR': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'OX': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'CP': ShipperClient.STATUS_TYPES.EN_ROUTE\n    };\n\n    FedexClient.prototype.getStatus = function(shipment) {\n      var statusCode, _ref1;\n      statusCode = shipment != null ? (_ref1 = shipment['StatusCode']) != null ? _ref1[0] : void 0 : void 0;\n      if (statusCode == null) {\n        return;\n      }\n      if (STATUS_MAP[statusCode] != null) {\n        return STATUS_MAP[statusCode];\n      } else {\n        return ShipperClient.STATUS_TYPES.UNKNOWN;\n      }\n    };\n\n    FedexClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, datetime, details, event_time, location, rawActivity, raw_timestamp, status, timestamp, _i, _len, _ref1, _ref2, _ref3, _ref4;\n      activities = [];\n      status = null;\n      _ref1 = shipment['Events'] || [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        rawActivity = _ref1[_i];\n        location = this.presentAddress((_ref2 = rawActivity['Address']) != null ? _ref2[0] : void 0);\n        raw_timestamp = (_ref3 = rawActivity['Timestamp']) != null ? _ref3[0] : void 0;\n        if (raw_timestamp != null) {\n          event_time = moment(raw_timestamp);\n          timestamp = event_time.toDate();\n          datetime = raw_timestamp.slice(0, 19);\n        }\n        details = (_ref4 = rawActivity['EventDescription']) != null ? _ref4[0] : void 0;\n        if ((details != null) && (timestamp != null)) {\n          activity = {\n            timestamp: timestamp,\n            datetime: datetime,\n            location: location,\n            details: details\n          };\n          activities.push(activity);\n        }\n      }\n      return {\n        activities: activities,\n        status: this.getStatus(shipment)\n      };\n    };\n\n    FedexClient.prototype.getEta = function(shipment) {\n      var ts, _ref1;\n      ts = shipment != null ? (_ref1 = shipment['EstimatedDeliveryTimestamp']) != null ? _ref1[0] : void 0 : void 0;\n      if (ts == null) {\n        return;\n      }\n      return moment(\"\" + ts.slice(0, 19) + \"Z\").toDate();\n    };\n\n    FedexClient.prototype.getService = function(shipment) {\n      var _ref1;\n      return shipment != null ? (_ref1 = shipment['ServiceInfo']) != null ? _ref1[0] : void 0 : void 0;\n    };\n\n    FedexClient.prototype.getWeight = function(shipment) {\n      var units, value, weightData, _ref1, _ref2, _ref3;\n      weightData = shipment != null ? (_ref1 = shipment['PackageWeight']) != null ? _ref1[0] : void 0 : void 0;\n      if (weightData == null) {\n        return;\n      }\n      units = (_ref2 = weightData['Units']) != null ? _ref2[0] : void 0;\n      value = (_ref3 = weightData['Value']) != null ? _ref3[0] : void 0;\n      if ((units != null) && (value != null)) {\n        return \"\" + value + \" \" + units;\n      }\n    };\n\n    FedexClient.prototype.getDestination = function(shipment) {\n      var _ref1;\n      return this.presentAddress((_ref1 = shipment['DestinationAddress']) != null ? _ref1[0] : void 0);\n    };\n\n    FedexClient.prototype.requestOptions = function(_arg) {\n      var reference, trackingNumber;\n      trackingNumber = _arg.trackingNumber, reference = _arg.reference;\n      return {\n        method: 'POST',\n        uri: 'https://ws.fedex.com/xml',\n        body: this.generateRequest(trackingNumber, reference)\n      };\n    };\n\n    return FedexClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    FedexClient: FedexClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/usps.js":"(function() {\n  var Builder, Parser, ShipperClient, UspsClient, lowerCase, moment, request, titleCase, upperCaseFirst, _ref, _ref1,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('xml2js'), Builder = _ref.Builder, Parser = _ref.Parser;\n\n  request = require('request');\n\n  moment = require('moment-timezone');\n\n  _ref1 = require('change-case'), titleCase = _ref1.titleCase, upperCaseFirst = _ref1.upperCaseFirst, lowerCase = _ref1.lowerCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  UspsClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(UspsClient, _super);\n\n    function UspsClient(_arg, options) {\n      this.userId = _arg.userId;\n      this.options = options;\n      UspsClient.__super__.constructor.apply(this, arguments);\n      this.parser = new Parser();\n      this.builder = new Builder({\n        renderOpts: {\n          pretty: false\n        }\n      });\n    }\n\n    UspsClient.prototype.generateRequest = function(trk, clientIp) {\n      if (clientIp == null) {\n        clientIp = '127.0.0.1';\n      }\n      return this.builder.buildObject({\n        'TrackFieldRequest': {\n          '$': {\n            'USERID': this.userId\n          },\n          'Revision': '1',\n          'ClientIp': clientIp,\n          'SourceId': 'shipit',\n          'TrackID': {\n            '$': {\n              'ID': trk\n            }\n          }\n        }\n      });\n    };\n\n    UspsClient.prototype.validateResponse = function(response, cb) {\n      var handleResponse;\n      handleResponse = function(xmlErr, trackResult) {\n        var trackInfo, _ref2, _ref3;\n        trackInfo = trackResult != null ? (_ref2 = trackResult['TrackResponse']) != null ? (_ref3 = _ref2['TrackInfo']) != null ? _ref3[0] : void 0 : void 0 : void 0;\n        if ((xmlErr != null) || (trackInfo == null)) {\n          return cb(xmlErr);\n        }\n        return cb(null, trackInfo);\n      };\n      this.parser.reset();\n      return this.parser.parseString(response, handleResponse);\n    };\n\n    UspsClient.prototype.getEta = function(shipment) {\n      var rawEta, _ref2, _ref3;\n      rawEta = ((_ref2 = shipment['PredictedDeliveryDate']) != null ? _ref2[0] : void 0) || ((_ref3 = shipment['ExpectedDeliveryDate']) != null ? _ref3[0] : void 0);\n      if (rawEta != null) {\n        return moment(\"\" + rawEta + \" 00:00:00Z\").toDate();\n      }\n    };\n\n    UspsClient.prototype.getService = function(shipment) {\n      var service, _ref2;\n      service = (_ref2 = shipment['Class']) != null ? _ref2[0] : void 0;\n      if (service != null) {\n        return service.replace(/\\<SUP\\>.*\\<\\/SUP\\>/, '');\n      }\n    };\n\n    UspsClient.prototype.getWeight = function(shipment) {};\n\n    UspsClient.prototype.presentTimestamp = function(dateString, timeString) {\n      if (dateString == null) {\n        return;\n      }\n      timeString = (timeString != null ? timeString.length : void 0) ? timeString : '12:00 am';\n      return moment(\"\" + dateString + \" \" + timeString + \" +0000\").toDate();\n    };\n\n    UspsClient.prototype.presentStatus = function(status) {\n      return ShipperClient.STATUS_TYPES.UNKNOWN;\n    };\n\n    UspsClient.prototype.getDestination = function(shipment) {\n      var city, postalCode, stateCode, _ref2, _ref3, _ref4;\n      city = (_ref2 = shipment['DestinationCity']) != null ? _ref2[0] : void 0;\n      stateCode = (_ref3 = shipment['DestinationState']) != null ? _ref3[0] : void 0;\n      postalCode = (_ref4 = shipment['DestinationZip']) != null ? _ref4[0] : void 0;\n      return this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        postalCode: postalCode\n      });\n    };\n\n    STATUS_MAP = {\n      'Accept': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Processed': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Depart': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Picked Up': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Arrival': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Sorting Complete': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Customs clearance': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Dispatch': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Arrive': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Inbound Out of Customs': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Forwarded': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Out for Delivery': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'Delivered': ShipperClient.STATUS_TYPES.DELIVERED,\n      'Notice Left': ShipperClient.STATUS_TYPES.DELAYED,\n      'Refused': ShipperClient.STATUS_TYPES.DELAYED,\n      'Item being held': ShipperClient.STATUS_TYPES.DELAYED,\n      'Missed delivery': ShipperClient.STATUS_TYPES.DELAYED,\n      'Addressee not available': ShipperClient.STATUS_TYPES.DELAYED,\n      'Undeliverable as Addressed': ShipperClient.STATUS_TYPES.DELAYED,\n      'Tendered to Military Agent': ShipperClient.STATUS_TYPES.DELIVERED\n    };\n\n    UspsClient.prototype.findStatusFromMap = function(statusText) {\n      var regex, status, statusCode, text;\n      status = ShipperClient.STATUS_TYPES.UNKNOWN;\n      for (text in STATUS_MAP) {\n        statusCode = STATUS_MAP[text];\n        regex = new RegExp(text, 'i');\n        if (regex.test(statusText)) {\n          status = statusCode;\n          break;\n        }\n      }\n      return status;\n    };\n\n    UspsClient.prototype.getStatus = function(shipment) {\n      var statusCategory, _ref2, _ref3;\n      statusCategory = shipment != null ? (_ref2 = shipment['StatusCategory']) != null ? _ref2[0] : void 0 : void 0;\n      switch (statusCategory) {\n        case 'Pre-Shipment':\n          return ShipperClient.STATUS_TYPES.SHIPPING;\n        case 'Delivered':\n          return ShipperClient.STATUS_TYPES.DELIVERED;\n        default:\n          return this.findStatusFromMap(shipment != null ? (_ref3 = shipment['Status']) != null ? _ref3[0] : void 0 : void 0);\n      }\n    };\n\n    UspsClient.prototype.presentActivity = function(rawActivity) {\n      var activity, city, countryCode, details, location, postalCode, stateCode, timestamp, _ref10, _ref11, _ref12, _ref13, _ref14, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n      if (rawActivity == null) {\n        return;\n      }\n      activity = null;\n      city = (_ref2 = rawActivity['EventCity']) != null ? _ref2[0] : void 0;\n      if ((_ref3 = rawActivity['EventState']) != null ? (_ref4 = _ref3[0]) != null ? _ref4.length : void 0 : void 0) {\n        stateCode = (_ref5 = rawActivity['EventState']) != null ? _ref5[0] : void 0;\n      }\n      if ((_ref6 = rawActivity['EventZIPCode']) != null ? (_ref7 = _ref6[0]) != null ? _ref7.length : void 0 : void 0) {\n        postalCode = (_ref8 = rawActivity['EventZIPCode']) != null ? _ref8[0] : void 0;\n      }\n      if ((_ref9 = rawActivity['EventCountry']) != null ? (_ref10 = _ref9[0]) != null ? _ref10.length : void 0 : void 0) {\n        countryCode = (_ref11 = rawActivity['EventCountry']) != null ? _ref11[0] : void 0;\n      }\n      location = this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        countryCode: countryCode,\n        postalCode: postalCode\n      });\n      timestamp = this.presentTimestamp(rawActivity != null ? (_ref12 = rawActivity['EventDate']) != null ? _ref12[0] : void 0 : void 0, rawActivity != null ? (_ref13 = rawActivity['EventTime']) != null ? _ref13[0] : void 0 : void 0);\n      details = rawActivity != null ? (_ref14 = rawActivity['Event']) != null ? _ref14[0] : void 0 : void 0;\n      if ((details != null) && (timestamp != null)) {\n        activity = {\n          timestamp: timestamp,\n          location: location,\n          details: details\n        };\n      }\n      return activity;\n    };\n\n    UspsClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, rawActivity, trackSummary, _i, _len, _ref2, _ref3;\n      activities = [];\n      trackSummary = this.presentActivity(shipment != null ? (_ref2 = shipment['TrackSummary']) != null ? _ref2[0] : void 0 : void 0);\n      if (trackSummary != null) {\n        activities.push(trackSummary);\n      }\n      _ref3 = (shipment != null ? shipment['TrackDetail'] : void 0) || [];\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        rawActivity = _ref3[_i];\n        activity = this.presentActivity(rawActivity);\n        if (activity != null) {\n          activities.push(activity);\n        }\n      }\n      return {\n        activities: activities,\n        status: this.getStatus(shipment)\n      };\n    };\n\n    UspsClient.prototype.requestOptions = function(_arg) {\n      var clientIp, endpoint, test, trackingNumber, xml;\n      trackingNumber = _arg.trackingNumber, clientIp = _arg.clientIp, test = _arg.test;\n      endpoint = test ? 'ShippingAPITest.dll' : 'ShippingAPI.dll';\n      xml = this.generateRequest(trackingNumber, clientIp);\n      return {\n        method: 'GET',\n        uri: \"http://production.shippingapis.com/\" + endpoint + \"?API=TrackV2&XML=\" + xml\n      };\n    };\n\n    return UspsClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    UspsClient: UspsClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/lasership.js":"(function() {\n  var LasershipClient, ShipperClient, find, moment, titleCase,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  find = require('underscore').find;\n\n  moment = require('moment-timezone');\n\n  titleCase = require('change-case').titleCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  LasershipClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(LasershipClient, _super);\n\n    function LasershipClient(options) {\n      this.options = options;\n      LasershipClient.__super__.constructor.apply(this, arguments);\n    }\n\n    LasershipClient.prototype.validateResponse = function(response, cb) {\n      response = JSON.parse(response);\n      if (response['Events'] == null) {\n        return cb({\n          error: 'missing events'\n        });\n      }\n      return cb(null, response);\n    };\n\n    LasershipClient.prototype.presentAddress = function(address) {\n      var city, countryCode, postalCode, stateCode;\n      city = address['City'];\n      stateCode = address['State'];\n      postalCode = address['PostalCode'];\n      countryCode = address['Country'];\n      return this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        countryCode: countryCode,\n        postalCode: postalCode\n      });\n    };\n\n    STATUS_MAP = {\n      'Released': ShipperClient.STATUS_TYPES.DELIVERED,\n      'Delivered': ShipperClient.STATUS_TYPES.DELIVERED,\n      'OutForDelivery': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'Arrived': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'Received': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'OrderReceived': ShipperClient.STATUS_TYPES.SHIPPING,\n      'OrderCreated': ShipperClient.STATUS_TYPES.SHIPPING\n    };\n\n    LasershipClient.prototype.presentStatus = function(eventType) {\n      if (eventType != null) {\n        return STATUS_MAP[eventType];\n      }\n    };\n\n    LasershipClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, dateTime, details, location, rawActivities, rawActivity, status, timestamp, _i, _len, _ref;\n      activities = [];\n      status = null;\n      rawActivities = shipment != null ? shipment['Events'] : void 0;\n      _ref = rawActivities || [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        rawActivity = _ref[_i];\n        location = this.presentAddress(rawActivity);\n        dateTime = rawActivity != null ? rawActivity['DateTime'] : void 0;\n        if (dateTime != null) {\n          timestamp = moment(\"\" + dateTime + \"Z\").toDate();\n        }\n        details = rawActivity != null ? rawActivity['EventShortText'] : void 0;\n        if ((details != null) && (timestamp != null)) {\n          activity = {\n            timestamp: timestamp,\n            location: location,\n            details: details\n          };\n          activities.push(activity);\n        }\n        if (!status) {\n          status = this.presentStatus(rawActivity != null ? rawActivity['EventType'] : void 0);\n        }\n      }\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    LasershipClient.prototype.getEta = function(shipment) {\n      if ((shipment != null ? shipment['EstimatedDeliveryDate'] : void 0) == null) {\n        return;\n      }\n      return moment(\"\" + shipment['EstimatedDeliveryDate'] + \"T00:00:00Z\").toDate();\n    };\n\n    LasershipClient.prototype.getService = function(shipment) {};\n\n    LasershipClient.prototype.getWeight = function(shipment) {\n      var piece, units, weight, _ref;\n      if (!(shipment != null ? (_ref = shipment['Pieces']) != null ? _ref.length : void 0 : void 0)) {\n        return;\n      }\n      piece = shipment['Pieces'][0];\n      weight = \"\" + piece['Weight'];\n      units = piece['WeightUnit'];\n      if (units != null) {\n        weight = \"\" + weight + \" \" + units;\n      }\n      return weight;\n    };\n\n    LasershipClient.prototype.getDestination = function(shipment) {\n      var destination;\n      destination = shipment != null ? shipment['Destination'] : void 0;\n      if (destination == null) {\n        return;\n      }\n      return this.presentAddress(destination);\n    };\n\n    LasershipClient.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'GET',\n        uri: \"http://www.lasership.com/track/\" + trackingNumber + \"/json\"\n      };\n    };\n\n    return LasershipClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    LasershipClient: LasershipClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/dhl.js":"(function() {\n  var DhlClient, Parser, ShipperClient, lowerCase, moment, titleCase, upperCaseFirst, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  Parser = require('xml2js').Parser;\n\n  moment = require('moment-timezone');\n\n  _ref = require('change-case'), titleCase = _ref.titleCase, upperCaseFirst = _ref.upperCaseFirst, lowerCase = _ref.lowerCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  DhlClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(DhlClient, _super);\n\n    function DhlClient(_arg, options) {\n      this.userId = _arg.userId, this.password = _arg.password;\n      this.options = options;\n      DhlClient.__super__.constructor.apply(this, arguments);\n      this.parser = new Parser();\n    }\n\n    DhlClient.prototype.generateRequest = function(trk) {\n      return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?>\\n<req:KnownTrackingRequest xmlns:req=\\\"http://www.dhl.com\\\">\\n  <Request>\\n    <ServiceHeader>\\n      <SiteID>\" + this.userId + \"</SiteID>\\n      <Password>\" + this.password + \"</Password>\\n    </ServiceHeader>\\n  </Request>\\n  <LanguageCode>en</LanguageCode>\\n  <AWBNumber>\" + trk + \"</AWBNumber>\\n  <LevelOfDetails>ALL_CHECK_POINTS</LevelOfDetails>\\n</req:KnownTrackingRequest>\";\n    };\n\n    DhlClient.prototype.validateResponse = function(response, cb) {\n      var handleResponse;\n      handleResponse = function(xmlErr, trackResult) {\n        var awbInfo, shipment, statusCode, trackStatus, trackingResponse, _ref1, _ref2, _ref3;\n        if ((xmlErr != null) || (trackResult == null)) {\n          return cb(xmlErr);\n        }\n        trackingResponse = trackResult['req:TrackingResponse'];\n        if (trackingResponse == null) {\n          return cb({\n            error: 'no tracking response'\n          });\n        }\n        awbInfo = (_ref1 = trackingResponse['AWBInfo']) != null ? _ref1[0] : void 0;\n        if (awbInfo == null) {\n          return cb({\n            error: 'no AWBInfo in response'\n          });\n        }\n        shipment = (_ref2 = awbInfo['ShipmentInfo']) != null ? _ref2[0] : void 0;\n        if (shipment == null) {\n          return cb({\n            error: 'could not find shipment'\n          });\n        }\n        trackStatus = (_ref3 = awbInfo['Status']) != null ? _ref3[0] : void 0;\n        statusCode = trackStatus != null ? trackStatus['ActionStatus'] : void 0;\n        if (statusCode.toString() !== 'success') {\n          return cb({\n            error: \"unexpected track status code=\" + statusCode\n          });\n        }\n        return cb(null, shipment);\n      };\n      this.parser.reset();\n      return this.parser.parseString(response, handleResponse);\n    };\n\n    DhlClient.prototype.getEta = function(shipment) {};\n\n    DhlClient.prototype.getService = function(shipment) {};\n\n    DhlClient.prototype.getWeight = function(shipment) {\n      var weight, _ref1;\n      weight = (_ref1 = shipment['Weight']) != null ? _ref1[0] : void 0;\n      if (weight != null) {\n        return \"\" + weight + \" LB\";\n      }\n    };\n\n    DhlClient.prototype.presentTimestamp = function(dateString, timeString) {\n      var inputString;\n      if (dateString == null) {\n        return;\n      }\n      if (timeString == null) {\n        timeString = '00:00';\n      }\n      inputString = \"\" + dateString + \" \" + timeString + \" +0000\";\n      return moment(inputString).toDate();\n    };\n\n    DhlClient.prototype.presentAddress = function(rawAddress) {\n      var city, countryCode, firstComma, firstDash, stateCode;\n      if (rawAddress == null) {\n        return;\n      }\n      firstComma = rawAddress.indexOf(',');\n      firstDash = rawAddress.indexOf('-', firstComma);\n      if (firstComma > -1 && firstDash > -1) {\n        city = rawAddress.substring(0, firstComma).trim();\n        stateCode = rawAddress.substring(firstComma + 1, firstDash).trim();\n        countryCode = rawAddress.substring(firstDash + 1).trim();\n      } else if (firstComma < 0 && firstDash > -1) {\n        city = rawAddress.substring(0, firstDash).trim();\n        stateCode = null;\n        countryCode = rawAddress.substring(firstDash + 1).trim();\n      } else {\n        return rawAddress;\n      }\n      city = city.replace(' HUB', '');\n      city = city.replace(' GATEWAY', '');\n      return this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        countryCode: countryCode\n      });\n    };\n\n    DhlClient.prototype.presentDetails = function(rawAddress, rawDetails) {\n      if (rawDetails == null) {\n        return;\n      }\n      if (rawAddress == null) {\n        return rawDetails;\n      }\n      return rawDetails.replace(/\\s\\s+/, ' ').trim().replace(new RegExp(\"(?: at| in)? \" + (rawAddress.trim()) + \"$\"), '');\n    };\n\n    STATUS_MAP = {\n      'AD': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'AF': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'AR': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'BA': ShipperClient.STATUS_TYPES.DELAYED,\n      'BN': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'BR': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'CA': ShipperClient.STATUS_TYPES.DELAYED,\n      'CC': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'CD': ShipperClient.STATUS_TYPES.DELAYED,\n      'CM': ShipperClient.STATUS_TYPES.DELAYED,\n      'CR': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'CS': ShipperClient.STATUS_TYPES.DELAYED,\n      'DD': ShipperClient.STATUS_TYPES.DELIVERED,\n      'DF': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'DS': ShipperClient.STATUS_TYPES.DELAYED,\n      'FD': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'HP': ShipperClient.STATUS_TYPES.DELAYED,\n      'IC': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'MC': ShipperClient.STATUS_TYPES.DELAYED,\n      'MD': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'MS': ShipperClient.STATUS_TYPES.DELAYED,\n      'ND': ShipperClient.STATUS_TYPES.DELAYED,\n      'NH': ShipperClient.STATUS_TYPES.DELAYED,\n      'OH': ShipperClient.STATUS_TYPES.DELAYED,\n      'OK': ShipperClient.STATUS_TYPES.DELIVERED,\n      'PD': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'PL': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'PO': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'PU': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'RD': ShipperClient.STATUS_TYPES.DELAYED,\n      'RR': ShipperClient.STATUS_TYPES.DELAYED,\n      'RT': ShipperClient.STATUS_TYPES.DELAYED,\n      'SA': ShipperClient.STATUS_TYPES.SHIPPING,\n      'SC': ShipperClient.STATUS_TYPES.DELAYED,\n      'SS': ShipperClient.STATUS_TYPES.DELAYED,\n      'TD': ShipperClient.STATUS_TYPES.DELAYED,\n      'TP': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'TR': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'UD': ShipperClient.STATUS_TYPES.DELAYED,\n      'WC': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'WX': ShipperClient.STATUS_TYPES.DELAYED\n    };\n\n    DhlClient.prototype.presentStatus = function(status) {\n      return STATUS_MAP[status] || ShipperClient.STATUS_TYPES.UNKNOWN;\n    };\n\n    DhlClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, details, location, rawActivities, rawActivity, rawLocation, status, timestamp, _i, _len, _ref1, _ref10, _ref11, _ref12, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n      activities = [];\n      status = null;\n      rawActivities = shipment['ShipmentEvent'];\n      if (rawActivities == null) {\n        rawActivities = [];\n      }\n      rawActivities.reverse();\n      _ref1 = rawActivities || [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        rawActivity = _ref1[_i];\n        rawLocation = (_ref2 = rawActivity['ServiceArea']) != null ? (_ref3 = _ref2[0]) != null ? (_ref4 = _ref3['Description']) != null ? _ref4[0] : void 0 : void 0 : void 0;\n        location = this.presentAddress(rawLocation);\n        timestamp = this.presentTimestamp((_ref5 = rawActivity['Date']) != null ? _ref5[0] : void 0, (_ref6 = rawActivity['Time']) != null ? _ref6[0] : void 0);\n        details = this.presentDetails(rawLocation, (_ref7 = rawActivity['ServiceEvent']) != null ? (_ref8 = _ref7[0]) != null ? (_ref9 = _ref8['Description']) != null ? _ref9[0] : void 0 : void 0 : void 0);\n        if ((details != null) && (timestamp != null)) {\n          details = details.slice(-1) === '.' ? details.slice(0, -1) : details;\n          activity = {\n            timestamp: timestamp,\n            location: location,\n            details: details\n          };\n          activities.push(activity);\n        }\n        if (!status) {\n          status = this.presentStatus((_ref10 = rawActivity['ServiceEvent']) != null ? (_ref11 = _ref10[0]) != null ? (_ref12 = _ref11['EventCode']) != null ? _ref12[0] : void 0 : void 0 : void 0);\n        }\n      }\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    DhlClient.prototype.getDestination = function(shipment) {\n      var destination, _ref1, _ref2, _ref3;\n      destination = (_ref1 = shipment['DestinationServiceArea']) != null ? (_ref2 = _ref1[0]) != null ? (_ref3 = _ref2['Description']) != null ? _ref3[0] : void 0 : void 0 : void 0;\n      if (destination == null) {\n        return;\n      }\n      return this.presentAddress(destination);\n    };\n\n    DhlClient.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'POST',\n        uri: 'http://xmlpi-ea.dhl.com/XMLShippingServlet',\n        body: this.generateRequest(trackingNumber)\n      };\n    };\n\n    return DhlClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    DhlClient: DhlClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/ontrac.js":"(function() {\n  var OnTracClient, ShipperClient, async, load, lowerCase, moment, request, titleCase, upperCaseFirst, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  load = require('cheerio').load;\n\n  moment = require('moment-timezone');\n\n  async = require('async');\n\n  request = require('request');\n\n  _ref = require('change-case'), titleCase = _ref.titleCase, upperCaseFirst = _ref.upperCaseFirst, lowerCase = _ref.lowerCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  OnTracClient = (function(_super) {\n    var LOCATION_STATES, STATUS_MAP;\n\n    __extends(OnTracClient, _super);\n\n    function OnTracClient(options) {\n      this.options = options;\n      OnTracClient.__super__.constructor.apply(this, arguments);\n    }\n\n    OnTracClient.prototype.validateResponse = function(response, cb) {\n      var data;\n      data = load(response, {\n        normalizeWhitespace: true\n      });\n      return cb(null, data);\n    };\n\n    OnTracClient.prototype.extractSummaryField = function(shipment, name) {\n      var $, value;\n      value = null;\n      $ = shipment;\n      if ($ == null) {\n        return;\n      }\n      $('td[bgcolor=\"#ffd204\"]').each(function(index, element) {\n        var regex, _ref1, _ref2;\n        regex = new RegExp(name);\n        if (!regex.test($(element).text())) {\n          return;\n        }\n        value = (_ref1 = $(element).next()) != null ? (_ref2 = _ref1.text()) != null ? _ref2.trim() : void 0 : void 0;\n        return false;\n      });\n      return value;\n    };\n\n    OnTracClient.prototype.getEta = function(shipment) {\n      var eta, regexMatch;\n      eta = this.extractSummaryField(shipment, 'Service Commitment');\n      if (eta == null) {\n        return;\n      }\n      regexMatch = eta.match('(.*) by (.*)');\n      if ((regexMatch != null ? regexMatch.length : void 0) > 1) {\n        eta = \"\" + regexMatch[1] + \" 23:59:59 +00:00\";\n      }\n      return moment(eta).toDate();\n    };\n\n    OnTracClient.prototype.getService = function(shipment) {\n      var service;\n      service = this.extractSummaryField(shipment, 'Service Code');\n      if (service == null) {\n        return;\n      }\n      return titleCase(service);\n    };\n\n    OnTracClient.prototype.getWeight = function(shipment) {\n      return this.extractSummaryField(shipment, 'Weight');\n    };\n\n    LOCATION_STATES = {\n      'Ontario': 'CA',\n      'Bakersfield': 'CA',\n      'Denver': 'CO',\n      'Vancouver': 'WA',\n      'Orange': 'CA',\n      'Hayward': 'CA',\n      'Phoenix': 'AZ',\n      'Sacramento': 'CA',\n      'Vegas': 'NV',\n      'Los Angeles': 'CA',\n      'Santa Maria': 'CA',\n      'Eugene': 'OR',\n      'Commerce': 'CA',\n      'Kettleman City': 'CA',\n      'Menlo Park': 'CA',\n      'San Jose': 'CA',\n      'Burbank': 'CA',\n      'Ventura': 'CA',\n      'Petaluma': 'CA',\n      'Corporate': 'CA',\n      'Medford': 'OR',\n      'Monterey': 'CA',\n      'San Francisco': 'CA',\n      'Stockton': 'CA',\n      'San Diego': 'CA',\n      'Fresno': 'CA',\n      'Salt Lake': 'UT',\n      'SaltLake': 'UT',\n      'Concord': 'CA',\n      'Tucson': 'AZ',\n      'Reno': 'NV',\n      'Seattle': 'WA'\n    };\n\n    OnTracClient.prototype.presentAddress = function(location) {\n      var addressState;\n      addressState = LOCATION_STATES[location];\n      if (addressState != null) {\n        return \"\" + location + \", \" + addressState;\n      } else {\n        return location;\n      }\n    };\n\n    STATUS_MAP = {\n      'DELIVERED': ShipperClient.STATUS_TYPES.DELIVERED,\n      'OUT FOR DELIVERY': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'PACKAGE RECEIVED AT FACILITY': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'IN TRANSIT': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'DATA ENTRY': ShipperClient.STATUS_TYPES.SHIPPING\n    };\n\n    OnTracClient.prototype.presentStatus = function(status) {\n      var statusType, _ref1;\n      status = status != null ? (_ref1 = status.replace('DETAILS', '')) != null ? _ref1.trim() : void 0 : void 0;\n      if (!(status != null ? status.length : void 0)) {\n        return ShipperClient.STATUS_TYPES.UNKNOWN;\n      }\n      statusType = STATUS_MAP[status];\n      if (statusType != null) {\n        return statusType;\n      } else {\n        return ShipperClient.STATUS_TYPES.UNKNOWN;\n      }\n    };\n\n    OnTracClient.prototype.presentTimestamp = function(ts) {\n      if (ts == null) {\n        return;\n      }\n      ts = ts.replace(/AM$/, ' AM').replace(/PM$/, ' PM');\n      return moment(\"\" + ts + \" +0000\").toDate();\n    };\n\n    OnTracClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var $, activities, status;\n      activities = [];\n      status = this.presentStatus(this.extractSummaryField(shipment, 'Delivery Status'));\n      $ = shipment;\n      if ($ == null) {\n        return {\n          activities: activities,\n          status: status\n        };\n      }\n      $(\"#trkdetail table table\").children('tr').each((function(_this) {\n        return function(rowIndex, row) {\n          var details, fields, location, timestamp;\n          if (!(rowIndex > 0)) {\n            return;\n          }\n          fields = [];\n          $(row).find('td').each(function(colIndex, col) {\n            return fields.push($(col).text().trim());\n          });\n          if (fields.length) {\n            if (fields[0].length) {\n              details = upperCaseFirst(lowerCase(fields[0]));\n            }\n            timestamp = _this.presentTimestamp(fields[1]);\n            if (fields[2].length) {\n              location = _this.presentAddress(fields[2]);\n            }\n            if ((details != null) && (timestamp != null)) {\n              return activities.unshift({\n                details: details,\n                timestamp: timestamp,\n                location: location\n              });\n            }\n          }\n        };\n      })(this));\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    OnTracClient.prototype.getDestination = function(shipment) {\n      var destination;\n      destination = this.extractSummaryField(shipment, 'Deliver To');\n      return this.presentLocationString(destination);\n    };\n\n    OnTracClient.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'GET',\n        uri: \"https://www.ontrac.com/trackingdetail.asp?tracking=\" + trackingNumber + \"&run=0\"\n      };\n    };\n\n    return OnTracClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    OnTracClient: OnTracClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/upsmi.js":"(function() {\n  var ShipperClient, UpsMiClient, load, lowerCase, moment, titleCase, upperCaseFirst, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  load = require('cheerio').load;\n\n  moment = require('moment-timezone');\n\n  _ref = require('change-case'), titleCase = _ref.titleCase, upperCaseFirst = _ref.upperCaseFirst, lowerCase = _ref.lowerCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  UpsMiClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(UpsMiClient, _super);\n\n    STATUS_MAP = {};\n\n    function UpsMiClient(options) {\n      this.options = options;\n      STATUS_MAP[ShipperClient.STATUS_TYPES.DELIVERED] = ['delivered'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.EN_ROUTE] = ['transferred', 'received', 'processed', 'sorted', 'post office entry'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY] = ['out for post office delivery'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.SHIPPING] = ['shipment information received'];\n      UpsMiClient.__super__.constructor.apply(this, arguments);\n    }\n\n    UpsMiClient.prototype.validateResponse = function(response, cb) {\n      var $, miDetails, summary, uspsDetails, _ref1;\n      $ = load(response, {\n        normalizeWhitespace: true\n      });\n      summary = (_ref1 = $('#Table6').find('table')) != null ? _ref1[0] : void 0;\n      uspsDetails = $('#ctl00_mainContent_ctl00_pnlUSPS > table');\n      miDetails = $('#ctl00_mainContent_ctl00_pnlMI > table');\n      return cb(null, {\n        $: $,\n        summary: summary,\n        uspsDetails: uspsDetails,\n        miDetails: miDetails\n      });\n    };\n\n    UpsMiClient.prototype.extractSummaryField = function(data, name) {\n      var $, summary, value;\n      value = null;\n      $ = data.$, summary = data.summary;\n      if (summary == null) {\n        return;\n      }\n      $(summary).children('tr').each(function(rindex, row) {\n        $(row).children('td').each(function(cindex, col) {\n          var regex, _ref1, _ref2;\n          regex = new RegExp(name);\n          if (regex.test($(col).text())) {\n            value = (_ref1 = $(col).next()) != null ? (_ref2 = _ref1.text()) != null ? _ref2.trim() : void 0 : void 0;\n          }\n          if (value != null) {\n            return false;\n          }\n        });\n        if (value != null) {\n          return false;\n        }\n      });\n      return value;\n    };\n\n    UpsMiClient.prototype.getEta = function(data) {\n      var eta, formattedEta;\n      eta = this.extractSummaryField(data, 'Projected Delivery Date');\n      if (eta != null) {\n        formattedEta = moment(\"\" + eta + \" 00:00 +0000\");\n      }\n      if (formattedEta != null ? formattedEta.isValid() : void 0) {\n        return formattedEta.toDate();\n      } else {\n        return void 0;\n      }\n    };\n\n    UpsMiClient.prototype.getService = function() {};\n\n    UpsMiClient.prototype.getWeight = function(data) {\n      var weight;\n      weight = this.extractSummaryField(data, 'Weight');\n      if (weight != null ? weight.length : void 0) {\n        return \"\" + weight + \" lbs.\";\n      }\n    };\n\n    UpsMiClient.prototype.presentStatus = function(details) {\n      var matchStrings, regex, status, statusCode, text, _i, _len;\n      status = null;\n      for (statusCode in STATUS_MAP) {\n        matchStrings = STATUS_MAP[statusCode];\n        for (_i = 0, _len = matchStrings.length; _i < _len; _i++) {\n          text = matchStrings[_i];\n          regex = new RegExp(text, 'i');\n          if (regex.test(lowerCase(details))) {\n            status = statusCode;\n            break;\n          }\n        }\n        if (status != null) {\n          break;\n        }\n      }\n      if (status != null) {\n        return parseInt(status, 10);\n      }\n    };\n\n    UpsMiClient.prototype.extractTimestamp = function(tsString) {\n      if (tsString.match(':')) {\n        return moment(\"\" + tsString + \" +0000\").toDate();\n      } else {\n        return moment(\"\" + tsString + \" 00:00 +0000\").toDate();\n      }\n    };\n\n    UpsMiClient.prototype.extractActivities = function($, table) {\n      var activities;\n      activities = [];\n      $(table).children('tr').each((function(_this) {\n        return function(rindex, row) {\n          var details, location, timestamp;\n          if (rindex === 0) {\n            return;\n          }\n          details = location = timestamp = null;\n          $(row).children('td').each(function(cindex, col) {\n            var value, _ref1, _ref2;\n            value = (_ref1 = $(col)) != null ? (_ref2 = _ref1.text()) != null ? _ref2.trim() : void 0 : void 0;\n            switch (cindex) {\n              case 0:\n                return timestamp = _this.extractTimestamp(value);\n              case 1:\n                return details = value;\n              case 2:\n                return location = _this.presentLocationString(value);\n            }\n          });\n          if ((details != null) && (timestamp != null)) {\n            return activities.push({\n              details: details,\n              location: location,\n              timestamp: timestamp\n            });\n          }\n        };\n      })(this));\n      return activities;\n    };\n\n    UpsMiClient.prototype.getActivitiesAndStatus = function(data) {\n      var $, activities, activity, miDetails, set1, set2, status, uspsDetails, _i, _len, _ref1;\n      status = null;\n      $ = data.$, uspsDetails = data.uspsDetails, miDetails = data.miDetails;\n      set1 = this.extractActivities($, uspsDetails);\n      set2 = this.extractActivities($, miDetails);\n      activities = set1.concat(set2);\n      _ref1 = activities || [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        activity = _ref1[_i];\n        if (status != null) {\n          break;\n        }\n        status = this.presentStatus(activity != null ? activity.details : void 0);\n      }\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    UpsMiClient.prototype.getDestination = function(data) {\n      var destination;\n      destination = this.extractSummaryField(data, 'Zip Code');\n      if (destination != null ? destination.length : void 0) {\n        return destination;\n      }\n    };\n\n    UpsMiClient.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'GET',\n        uri: \"http://www.ups-mi.net/packageID/PackageID.aspx?PID=\" + trackingNumber\n      };\n    };\n\n    return UpsMiClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    UpsMiClient: UpsMiClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/amazon.js":"(function() {\n  var AmazonClient, ShipperClient, load, lowerCase, moment, request, titleCase, upperCase, upperCaseFirst, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  load = require('cheerio').load;\n\n  moment = require('moment-timezone');\n\n  request = require('request');\n\n  _ref = require('change-case'), titleCase = _ref.titleCase, upperCaseFirst = _ref.upperCaseFirst, lowerCase = _ref.lowerCase, upperCase = _ref.upperCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  AmazonClient = (function(_super) {\n    var DAYS_OF_THE_WEEK, STATUS_MAP;\n\n    __extends(AmazonClient, _super);\n\n    STATUS_MAP = {};\n\n    DAYS_OF_THE_WEEK = {};\n\n    function AmazonClient(options) {\n      this.options = options;\n      STATUS_MAP[ShipperClient.STATUS_TYPES.DELAYED] = ['delivery attempted'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.DELIVERED] = ['delivered'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY] = ['out for delivery'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.SHIPPING] = ['in transit to carrier', 'shipping soon'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.EN_ROUTE] = ['on the way', 'package arrived', 'package received', 'shipment departed', 'shipment arrived'];\n      DAYS_OF_THE_WEEK['SUNDAY'] = 0;\n      DAYS_OF_THE_WEEK['MONDAY'] = 1;\n      DAYS_OF_THE_WEEK['TUESDAY'] = 2;\n      DAYS_OF_THE_WEEK['WEDNESDAY'] = 3;\n      DAYS_OF_THE_WEEK['THURSDAY'] = 4;\n      DAYS_OF_THE_WEEK['FRIDAY'] = 5;\n      DAYS_OF_THE_WEEK['SATURDAY'] = 6;\n      AmazonClient.__super__.constructor.apply(this, arguments);\n    }\n\n    AmazonClient.prototype.validateResponse = function(response, cb) {\n      var $, rightNow, _ref1;\n      $ = load(response, {\n        normalizeWhitespace: true\n      });\n      rightNow = (_ref1 = /<!-- navp-.* \\((.*)\\) --?>/.exec(response)) != null ? _ref1[1] : void 0;\n      return cb(null, {\n        $: $,\n        rightNow: rightNow\n      });\n    };\n\n    AmazonClient.prototype.getService = function() {};\n\n    AmazonClient.prototype.getWeight = function() {};\n\n    AmazonClient.prototype.getDestination = function(data) {\n      var $, dest, rightNow;\n      if (data == null) {\n        return;\n      }\n      $ = data.$, rightNow = data.rightNow;\n      dest = $(\".delivery-address\").text();\n      if (dest != null ? dest.length : void 0) {\n        return this.presentLocationString(dest);\n      }\n    };\n\n    AmazonClient.prototype.getEta = function(data) {\n      var $, container, dateComponent, dateComponentStr, deliveryStatus, etaDayVal, etaString, matches, nowDayVal, numDays, rightNow, timeComponent, _ref1, _ref2;\n      if (data == null) {\n        return;\n      }\n      $ = data.$, rightNow = data.rightNow;\n      container = $(\".shipment-status-content\").children('span');\n      if (!container.length) {\n        return;\n      }\n      deliveryStatus = $(container[0]).text().trim();\n      if (/delivered/i.test(deliveryStatus)) {\n        return;\n      }\n      if (!/arriving/i.test(deliveryStatus)) {\n        return;\n      }\n      if (/.* by .*/i.test(deliveryStatus)) {\n        matches = deliveryStatus.match(/(.*) by (.*)/, 'i');\n        deliveryStatus = matches[1];\n        timeComponent = matches[2];\n      }\n      matches = deliveryStatus.match(/Arriving (.*)/, 'i');\n      dateComponentStr = matches != null ? matches[1] : void 0;\n      if (/-/.test(dateComponentStr)) {\n        dateComponentStr = (_ref1 = dateComponentStr.split('-')) != null ? (_ref2 = _ref1[1]) != null ? _ref2.trim() : void 0 : void 0;\n      }\n      dateComponent = moment(rightNow);\n      if (/today/i.test(dateComponentStr)) {\n        numDays = 0;\n      } else if (/tomorrow/i.test(dateComponentStr)) {\n        numDays = 1;\n      } else if (/day/i.test(dateComponentStr)) {\n        nowDayVal = DAYS_OF_THE_WEEK[upperCase(moment(rightNow).format('dddd'))];\n        etaDayVal = DAYS_OF_THE_WEEK[upperCase(dateComponentStr)];\n        if (etaDayVal > nowDayVal) {\n          numDays = etaDayVal - nowDayVal;\n        } else {\n          numDays = 7 + (etaDayVal - nowDayVal);\n        }\n      } else {\n        if (!/20\\d{2}/.test(dateComponentStr)) {\n          dateComponentStr += ', 2015';\n        }\n        numDays = (moment(dateComponentStr) - moment(rightNow)) / (1000 * 3600 * 24) + 1;\n      }\n      dateComponent = moment(rightNow).add(numDays, 'days');\n      if (timeComponent == null) {\n        timeComponent = \"11pm\";\n      }\n      timeComponent = upperCase(timeComponent);\n      etaString = \"\" + (dateComponent.format('YYYY-MM-DD')) + \" \" + timeComponent + \" +00:00\";\n      return moment(etaString, 'YYYY-MM-DD HA Z').toDate();\n    };\n\n    AmazonClient.prototype.presentStatus = function(details) {\n      var matchStrings, regex, status, statusCode, text, _i, _len;\n      status = null;\n      for (statusCode in STATUS_MAP) {\n        matchStrings = STATUS_MAP[statusCode];\n        for (_i = 0, _len = matchStrings.length; _i < _len; _i++) {\n          text = matchStrings[_i];\n          regex = new RegExp(text, 'i');\n          if (regex.test(lowerCase(details))) {\n            status = statusCode;\n            break;\n          }\n        }\n        if (status != null) {\n          break;\n        }\n      }\n      if (status != null) {\n        return parseInt(status, 10);\n      }\n    };\n\n    AmazonClient.prototype.getActivitiesAndStatus = function(data) {\n      var $, activities, columns, components, date, dateStr, details, location, rightNow, row, rows, status, timeOfDay, timestamp, ts, _i, _len;\n      activities = [];\n      status = null;\n      if (data == null) {\n        return {\n          activities: activities,\n          status: status\n        };\n      }\n      $ = data.$, rightNow = data.rightNow;\n      status = this.presentStatus($(\".latest-event-status\").text());\n      rows = $(\"div[data-a-expander-name=event-history-list] .a-box\");\n      for (_i = 0, _len = rows.length; _i < _len; _i++) {\n        row = rows[_i];\n        columns = $($(row).find(\".a-row\")[0]).children('.a-column');\n        if (columns.length === 2) {\n          timeOfDay = $(columns[0]).text().trim();\n          if (timeOfDay === '--') {\n            timeOfDay = '12:00 AM';\n          }\n          components = $(columns[1]).children('span');\n          details = (components != null ? components[0] : void 0) != null ? $(components[0]).text().trim() : '';\n          location = (components != null ? components[1] : void 0) != null ? $(components[1]).text().trim() : '';\n          location = this.presentLocationString(location);\n          ts = \"\" + dateStr + \" \" + timeOfDay + \" +00:00\";\n          timestamp = moment(ts, 'YYYY-MM-DD H:mm A Z').toDate();\n          if ((timestamp != null) && (details != null ? details.length : void 0)) {\n            activities.push({\n              timestamp: timestamp,\n              location: location,\n              details: details\n            });\n            if (status == null) {\n              status = this.presentStatus(details);\n            }\n          }\n        } else {\n          dateStr = $(row).text().trim().replace('Latest update: ', '');\n          if (/yesterday/i.test(dateStr)) {\n            date = moment(rightNow).subtract(1, 'day');\n          } else if (/today/i.test(dateStr)) {\n            date = moment(rightNow);\n          } else if (/day/.test(dateStr)) {\n            date = moment(\"\" + dateStr + \", \" + (moment(rightNow).format('YYYY')));\n          } else {\n            date = moment(dateStr);\n          }\n          dateStr = date.format('YYYY-MM-DD');\n        }\n      }\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    AmazonClient.prototype.requestOptions = function(_arg) {\n      var orderID, orderingShipmentId;\n      orderID = _arg.orderID, orderingShipmentId = _arg.orderingShipmentId;\n      return {\n        method: 'GET',\n        uri: \"https://www.amazon.com/gp/css/shiptrack/view.html\" + \"/ref=pe_385040_121528360_TE_SIMP_typ?ie=UTF8\" + (\"&orderID=\" + orderID) + (\"&orderingShipmentId=\" + orderingShipmentId) + \"&packageId=1\"\n      };\n    };\n\n    return AmazonClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    AmazonClient: AmazonClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/a1.js":"(function() {\n  var A1Client, Parser, ShipperClient, moment, titleCase,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  Parser = require('xml2js').Parser;\n\n  moment = require('moment-timezone');\n\n  titleCase = require('change-case').titleCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  A1Client = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(A1Client, _super);\n\n    function A1Client(options) {\n      this.options = options;\n      A1Client.__super__.constructor.apply(this, arguments);\n      this.parser = new Parser();\n    }\n\n    A1Client.prototype.validateResponse = function(response, cb) {\n      var handleResponse;\n      handleResponse = function(xmlErr, trackResult) {\n        var error, errorInfo, trackingInfo, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;\n        if ((xmlErr != null) || (trackResult == null)) {\n          return cb(xmlErr);\n        }\n        trackingInfo = (_ref = trackResult['AmazonTrackingResponse']) != null ? (_ref1 = _ref['PackageTrackingInfo']) != null ? _ref1[0] : void 0 : void 0;\n        if ((trackingInfo != null ? trackingInfo['TrackingNumber'] : void 0) == null) {\n          errorInfo = (_ref2 = trackResult['AmazonTrackingResponse']) != null ? (_ref3 = _ref2['TrackingErrorInfo']) != null ? _ref3[0] : void 0 : void 0;\n          error = errorInfo != null ? (_ref4 = errorInfo['TrackingErrorDetail']) != null ? (_ref5 = _ref4[0]) != null ? (_ref6 = _ref5['ErrorDetailCodeDesc']) != null ? _ref6[0] : void 0 : void 0 : void 0 : void 0;\n          if (error != null) {\n            return cb(error);\n          }\n          cb('unknown error');\n        }\n        return cb(null, trackingInfo);\n      };\n      this.parser.reset();\n      return this.parser.parseString(response, handleResponse);\n    };\n\n    A1Client.prototype.presentAddress = function(address) {\n      var city, countryCode, postalCode, stateCode, _ref, _ref1, _ref2, _ref3;\n      if (address == null) {\n        return;\n      }\n      city = (_ref = address['City']) != null ? _ref[0] : void 0;\n      stateCode = (_ref1 = address['StateProvince']) != null ? _ref1[0] : void 0;\n      countryCode = (_ref2 = address['CountryCode']) != null ? _ref2[0] : void 0;\n      postalCode = (_ref3 = address['PostalCode']) != null ? _ref3[0] : void 0;\n      return this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        countryCode: countryCode,\n        postalCode: postalCode\n      });\n    };\n\n    STATUS_MAP = {\n      101: ShipperClient.STATUS_TYPES.EN_ROUTE,\n      102: ShipperClient.STATUS_TYPES.EN_ROUTE,\n      302: ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      304: ShipperClient.STATUS_TYPES.DELAYED,\n      301: ShipperClient.STATUS_TYPES.DELIVERED\n    };\n\n    A1Client.prototype.getStatus = function(shipment) {\n      var code, lastActivity, statusCode, _ref, _ref1, _ref2, _ref3, _ref4;\n      lastActivity = (_ref = shipment['TrackingEventHistory']) != null ? (_ref1 = _ref[0]) != null ? (_ref2 = _ref1['TrackingEventDetail']) != null ? _ref2[0] : void 0 : void 0 : void 0;\n      statusCode = lastActivity != null ? (_ref3 = lastActivity['EventCode']) != null ? _ref3[0] : void 0 : void 0;\n      if (statusCode == null) {\n        return;\n      }\n      code = parseInt((_ref4 = statusCode.match(/EVENT_(.*)$/)) != null ? _ref4[1] : void 0);\n      if (isNaN(code)) {\n        return;\n      }\n      if (STATUS_MAP[code] != null) {\n        return STATUS_MAP[code];\n      } else {\n        if (code < 300) {\n          return ShipperClient.STATUS_TYPES.EN_ROUTE;\n        } else {\n          return ShipperClient.STATUS_TYPES.UNKNOWN;\n        }\n      }\n    };\n\n    A1Client.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, datetime, details, event_time, location, rawActivities, rawActivity, raw_timestamp, status, timestamp, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4;\n      activities = [];\n      status = null;\n      rawActivities = (_ref = shipment['TrackingEventHistory']) != null ? (_ref1 = _ref[0]) != null ? _ref1['TrackingEventDetail'] : void 0 : void 0;\n      _ref2 = rawActivities || [];\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        rawActivity = _ref2[_i];\n        location = this.presentAddress(rawActivity != null ? (_ref3 = rawActivity['EventLocation']) != null ? _ref3[0] : void 0 : void 0);\n        raw_timestamp = rawActivity != null ? rawActivity['EventDateTime'][0] : void 0;\n        if (raw_timestamp != null) {\n          event_time = moment(raw_timestamp);\n          timestamp = event_time.toDate();\n          datetime = raw_timestamp.slice(0, 19);\n        }\n        details = rawActivity != null ? (_ref4 = rawActivity['EventCodeDesc']) != null ? _ref4[0] : void 0 : void 0;\n        if ((details != null) && (timestamp != null)) {\n          activity = {\n            timestamp: timestamp,\n            datetime: datetime,\n            location: location,\n            details: details\n          };\n          activities.push(activity);\n        }\n      }\n      return {\n        activities: activities,\n        status: this.getStatus(shipment)\n      };\n    };\n\n    A1Client.prototype.getEta = function(shipment) {\n      var activities, firstActivity, _ref, _ref1, _ref2, _ref3;\n      activities = ((_ref = shipment['TrackingEventHistory']) != null ? (_ref1 = _ref[0]) != null ? _ref1['TrackingEventDetail'] : void 0 : void 0) || [];\n      firstActivity = activities[activities.length - 1];\n      if ((firstActivity != null ? (_ref2 = firstActivity['EstimatedDeliveryDate']) != null ? _ref2[0] : void 0 : void 0) == null) {\n        return;\n      }\n      return moment(\"\" + (firstActivity != null ? (_ref3 = firstActivity['EstimatedDeliveryDate']) != null ? _ref3[0] : void 0 : void 0) + \"T00:00:00Z\").toDate();\n    };\n\n    A1Client.prototype.getService = function(shipment) {\n      return null;\n    };\n\n    A1Client.prototype.getWeight = function(shipment) {\n      return null;\n    };\n\n    A1Client.prototype.getDestination = function(shipment) {\n      var _ref;\n      return this.presentAddress(shipment != null ? (_ref = shipment['PackageDestinationLocation']) != null ? _ref[0] : void 0 : void 0);\n    };\n\n    A1Client.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'GET',\n        uri: \"http://www.aoneonline.com/pages/customers/trackingrequest.php?tracking_number=\" + trackingNumber\n      };\n    };\n\n    return A1Client;\n\n  })(ShipperClient);\n\n  module.exports = {\n    A1Client: A1Client\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/canada_post.js":"(function() {\n  var CanadaPostClient, Parser, ShipperClient, find, moment, titleCase,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  Parser = require('xml2js').Parser;\n\n  find = require('underscore').find;\n\n  moment = require('moment-timezone');\n\n  titleCase = require('change-case').titleCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  CanadaPostClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(CanadaPostClient, _super);\n\n    function CanadaPostClient(_arg, options) {\n      this.username = _arg.username, this.password = _arg.password;\n      this.options = options;\n      CanadaPostClient.__super__.constructor.apply(this, arguments);\n      this.parser = new Parser();\n    }\n\n    CanadaPostClient.prototype.validateResponse = function(response, cb) {\n      var handleResponse;\n      handleResponse = function(xmlErr, trackResult) {\n        var details;\n        if ((xmlErr != null) || (trackResult == null)) {\n          return cb(xmlErr);\n        }\n        details = trackResult['tracking-detail'];\n        if (details == null) {\n          return cb('response not recognized');\n        }\n        return cb(null, details);\n      };\n      this.parser.reset();\n      return this.parser.parseString(response, handleResponse);\n    };\n\n    STATUS_MAP = {\n      'in transit': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'processed': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'information submitted': ShipperClient.STATUS_TYPES.SHIPPING,\n      'Shipment picked up': ShipperClient.STATUS_TYPES.SHIPPING,\n      'Shipment received': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'delivered': ShipperClient.STATUS_TYPES.DELIVERED,\n      'out for delivery': ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      'item released': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'arrived': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'departed': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'is en route': ShipperClient.STATUS_TYPES.EN_ROUTE,\n      'item mailed': ShipperClient.STATUS_TYPES.SHIPPING,\n      'available for pickup': ShipperClient.STATUS_TYPES.DELAYED,\n      'Attempted delivery': ShipperClient.STATUS_TYPES.DELAYED\n    };\n\n    CanadaPostClient.prototype.findStatusFromMap = function(statusText) {\n      var regex, status, statusCode, text;\n      status = ShipperClient.STATUS_TYPES.UNKNOWN;\n      if (!(statusText != null ? statusText.length : void 0)) {\n        return status;\n      }\n      for (text in STATUS_MAP) {\n        statusCode = STATUS_MAP[text];\n        regex = new RegExp(text, 'i');\n        if (regex.test(statusText)) {\n          status = statusCode;\n          break;\n        }\n      }\n      return status;\n    };\n\n    CanadaPostClient.prototype.getStatus = function(lastEvent) {\n      return this.findStatusFromMap(lastEvent != null ? lastEvent.details : void 0);\n    };\n\n    CanadaPostClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, city, details, event, events, location, stateCode, status, timestamp, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;\n      activities = [];\n      status = null;\n      events = (_ref = shipment['significant-events']) != null ? (_ref1 = _ref[0]) != null ? _ref1['occurrence'] : void 0 : void 0;\n      _ref2 = events || [];\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        event = _ref2[_i];\n        city = (_ref3 = event['event-site']) != null ? _ref3[0] : void 0;\n        stateCode = (_ref4 = event['event-province']) != null ? _ref4[0] : void 0;\n        location = this.presentLocation({\n          city: city,\n          stateCode: stateCode\n        });\n        timestamp = \"\" + ((_ref5 = event['event-date']) != null ? _ref5[0] : void 0) + \"T\" + ((_ref6 = event['event-time']) != null ? _ref6[0] : void 0) + \"Z\";\n        timestamp = moment(timestamp).toDate();\n        details = (_ref7 = event['event-description']) != null ? _ref7[0] : void 0;\n        if ((details != null) && (timestamp != null)) {\n          activity = {\n            timestamp: timestamp,\n            location: location,\n            details: details\n          };\n          activities.push(activity);\n        }\n      }\n      return {\n        activities: activities,\n        status: this.getStatus(activities != null ? activities[0] : void 0)\n      };\n    };\n\n    CanadaPostClient.prototype.getEta = function(shipment) {\n      var ts, _ref, _ref1;\n      ts = ((_ref = shipment['changed-expected-date']) != null ? _ref[0] : void 0) || ((_ref1 = shipment['expected-delivery-date']) != null ? _ref1[0] : void 0);\n      if (!(ts != null ? ts.length : void 0)) {\n        return;\n      }\n      if (ts != null ? ts.length : void 0) {\n        return moment(\"\" + ts + \"T00:00:00Z\").toDate();\n      }\n    };\n\n    CanadaPostClient.prototype.getService = function(shipment) {\n      var _ref;\n      return (_ref = shipment['service-name']) != null ? _ref[0] : void 0;\n    };\n\n    CanadaPostClient.prototype.getWeight = function(shipment) {};\n\n    CanadaPostClient.prototype.getDestination = function(shipment) {\n      var _ref;\n      return (_ref = shipment['destination-postal-id']) != null ? _ref[0] : void 0;\n    };\n\n    CanadaPostClient.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'GET',\n        uri: \"https://soa-gw.canadapost.ca/vis/track/pin/\" + trackingNumber + \"/detail.xml\",\n        auth: {\n          user: this.username,\n          pass: this.password\n        }\n      };\n    };\n\n    return CanadaPostClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    CanadaPostClient: CanadaPostClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/dhlgm.js":"(function() {\n  var DhlGmClient, ShipperClient, load, lowerCase, moment, titleCase, upperCaseFirst, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  load = require('cheerio').load;\n\n  moment = require('moment-timezone');\n\n  _ref = require('change-case'), titleCase = _ref.titleCase, upperCaseFirst = _ref.upperCaseFirst, lowerCase = _ref.lowerCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  DhlGmClient = (function(_super) {\n    var STATUS_MAP;\n\n    __extends(DhlGmClient, _super);\n\n    STATUS_MAP = {};\n\n    function DhlGmClient(options) {\n      this.options = options;\n      STATUS_MAP[ShipperClient.STATUS_TYPES.DELIVERED] = ['delivered'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.EN_ROUTE] = ['transferred', 'cleared', 'received', 'processed', 'sorted', 'sorting complete', 'arrival', 'tendered'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY] = ['out for delivery'];\n      STATUS_MAP[ShipperClient.STATUS_TYPES.SHIPPING] = ['electronic notification received'];\n      DhlGmClient.__super__.constructor.apply(this, arguments);\n    }\n\n    DhlGmClient.prototype.validateResponse = function(response, cb) {\n      var error;\n      try {\n        response = response.replace(/<br>/gi, ' ');\n        return cb(null, load(response, {\n          normalizeWhitespace: true\n        }));\n      } catch (_error) {\n        error = _error;\n        return cb(error);\n      }\n    };\n\n    DhlGmClient.prototype.extractSummaryField = function(data, name) {\n      var $, regex, value;\n      if (data == null) {\n        return;\n      }\n      $ = data;\n      value = void 0;\n      regex = new RegExp(name);\n      $(\".card-info > dl\").children().each(function(findex, field) {\n        var _ref1, _ref2;\n        if (regex.test($(field).text())) {\n          value = (_ref1 = $(field).next()) != null ? (_ref2 = _ref1.text()) != null ? _ref2.trim() : void 0 : void 0;\n        }\n        if (value != null) {\n          return false;\n        }\n      });\n      return value;\n    };\n\n    DhlGmClient.prototype.extractHeaderField = function(data, name) {\n      var $, regex, value;\n      if (data == null) {\n        return;\n      }\n      $ = data;\n      value = void 0;\n      regex = new RegExp(name);\n      $(\".card > .row\").children().each(function(findex, field) {\n        $(field).children().each(function(cindex, col) {\n          return $(col).find('dt').each(function(dindex, element) {\n            var _ref1, _ref2;\n            if (regex.test($(element).text())) {\n              return value = (_ref1 = $(element).next()) != null ? (_ref2 = _ref1.text()) != null ? _ref2.trim() : void 0 : void 0;\n            }\n          });\n        });\n        if (value != null) {\n          return false;\n        }\n      });\n      return value;\n    };\n\n    DhlGmClient.prototype.getEta = function(data) {\n      var $, eta;\n      if (data == null) {\n        return;\n      }\n      $ = data;\n      eta = $(\".status-info > .row .est-delivery > p\").text();\n      if (!(eta != null ? eta.length : void 0)) {\n        return;\n      }\n      return moment(\"\" + eta + \" 23:59:59 +00:00\").toDate();\n    };\n\n    DhlGmClient.prototype.getService = function(data) {\n      return this.extractSummaryField(data, 'Service');\n    };\n\n    DhlGmClient.prototype.getWeight = function(data) {\n      return this.extractSummaryField(data, 'Weight');\n    };\n\n    DhlGmClient.prototype.presentStatus = function(details) {\n      var matchStrings, regex, status, statusCode, text, _i, _len;\n      status = null;\n      for (statusCode in STATUS_MAP) {\n        matchStrings = STATUS_MAP[statusCode];\n        for (_i = 0, _len = matchStrings.length; _i < _len; _i++) {\n          text = matchStrings[_i];\n          regex = new RegExp(text, 'i');\n          if (regex.test(lowerCase(details))) {\n            status = statusCode;\n            break;\n          }\n        }\n        if (status != null) {\n          break;\n        }\n      }\n      if (status != null) {\n        return parseInt(status, 10);\n      }\n    };\n\n    DhlGmClient.prototype.getActivitiesAndStatus = function(data) {\n      var $, activities, currentDate, currentTime, details, location, row, rowData, status, timestamp, _i, _len, _ref1, _ref2, _ref3;\n      status = null;\n      activities = [];\n      if (data == null) {\n        return {\n          activities: activities,\n          status: status\n        };\n      }\n      $ = data;\n      currentDate = null;\n      _ref1 = $(\".timeline\").children() || [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        rowData = _ref1[_i];\n        row = $(rowData);\n        if (row.hasClass('timeline-date')) {\n          currentDate = row.text();\n        }\n        if (row.hasClass('timeline-event')) {\n          currentTime = row.find(\".timeline-time\").text();\n          if (currentTime != null ? currentTime.length : void 0) {\n            if (currentTime != null ? currentTime.length : void 0) {\n              currentTime = (_ref2 = currentTime.trim().split(' ')) != null ? _ref2[0] : void 0;\n            }\n            currentTime = currentTime.replace('AM', ' AM').replace('PM', ' PM');\n            currentTime += \" +00:00\";\n            timestamp = moment(\"\" + currentDate + \" \" + currentTime).toDate();\n          }\n          location = row.find(\".timeline-location-responsive\").text();\n          location = location != null ? location.trim() : void 0;\n          if (location != null ? location.length : void 0) {\n            location = upperCaseFirst(location);\n          }\n          details = (_ref3 = row.find(\".timeline-description\").text()) != null ? _ref3.trim() : void 0;\n          if ((details != null) && (timestamp != null)) {\n            if (status == null) {\n              status = this.presentStatus(details);\n            }\n            activities.push({\n              details: details,\n              location: location,\n              timestamp: timestamp\n            });\n          }\n        }\n      }\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    DhlGmClient.prototype.getDestination = function(data) {\n      return this.extractHeaderField(data, 'To:');\n    };\n\n    DhlGmClient.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'GET',\n        uri: \"http://webtrack.dhlglobalmail.com/?trackingnumber=\" + trackingNumber\n      };\n    };\n\n    return DhlGmClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    DhlGmClient: DhlGmClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/prestige.js":"(function() {\n  var PrestigeClient, ShipperClient, moment, reduce, titleCase,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  reduce = require('underscore').reduce;\n\n  moment = require('moment-timezone');\n\n  titleCase = require('change-case').titleCase;\n\n  ShipperClient = require('./shipper').ShipperClient;\n\n  PrestigeClient = (function(_super) {\n    var ADDR_ATTRS, STATUS_MAP;\n\n    __extends(PrestigeClient, _super);\n\n    function PrestigeClient(options) {\n      this.options = options;\n      PrestigeClient.__super__.constructor.apply(this, arguments);\n    }\n\n    PrestigeClient.prototype.validateResponse = function(response, cb) {\n      response = JSON.parse(response);\n      if (!(response != null ? response.length : void 0)) {\n        return cb({\n          error: 'no tracking info found'\n        });\n      }\n      response = response[0];\n      if (response['TrackingEventHistory'] == null) {\n        return cb({\n          error: 'missing events'\n        });\n      }\n      return cb(null, response);\n    };\n\n    ADDR_ATTRS = ['City', 'State', 'Zip'];\n\n    PrestigeClient.prototype.presentAddress = function(prefix, event) {\n      var address, city, postalCode, stateCode;\n      if (event == null) {\n        return;\n      }\n      address = reduce(ADDR_ATTRS, (function(d, v) {\n        d[v] = event[\"\" + prefix + v];\n        return d;\n      }), {});\n      city = address['City'];\n      stateCode = address['State'];\n      postalCode = address['Zip'];\n      return this.presentLocation({\n        city: city,\n        stateCode: stateCode,\n        postalCode: postalCode\n      });\n    };\n\n    STATUS_MAP = {\n      301: ShipperClient.STATUS_TYPES.DELIVERED,\n      302: ShipperClient.STATUS_TYPES.OUT_FOR_DELIVERY,\n      101: ShipperClient.STATUS_TYPES.SHIPPING\n    };\n\n    PrestigeClient.prototype.presentStatus = function(eventType) {\n      var codeStr, eventCode, status, _ref;\n      codeStr = (_ref = eventType.match('EVENT_(.*)$')) != null ? _ref[1] : void 0;\n      if (!(codeStr != null ? codeStr.length : void 0)) {\n        return;\n      }\n      eventCode = parseInt(codeStr);\n      if (isNaN(eventCode)) {\n        return;\n      }\n      status = STATUS_MAP[eventCode];\n      if (status != null) {\n        return status;\n      }\n      if (eventCode < 300 && eventCode > 101) {\n        return ShipperClient.STATUS_TYPES.EN_ROUTE;\n      }\n    };\n\n    PrestigeClient.prototype.getActivitiesAndStatus = function(shipment) {\n      var activities, activity, dateTime, details, location, rawActivities, rawActivity, status, timestamp, _i, _len, _ref;\n      activities = [];\n      status = null;\n      rawActivities = shipment != null ? shipment['TrackingEventHistory'] : void 0;\n      _ref = rawActivities || [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        rawActivity = _ref[_i];\n        location = this.presentAddress('EL', rawActivity);\n        dateTime = \"\" + (rawActivity != null ? rawActivity['serverDate'] : void 0) + \" \" + (rawActivity != null ? rawActivity['serverTime'] : void 0);\n        timestamp = moment(\"\" + dateTime + \" +00:00\").toDate();\n        details = rawActivity != null ? rawActivity['EventCodeDesc'] : void 0;\n        if ((details != null) && (timestamp != null)) {\n          activity = {\n            timestamp: timestamp,\n            location: location,\n            details: details\n          };\n          activities.push(activity);\n        }\n        if (!status) {\n          status = this.presentStatus(rawActivity != null ? rawActivity['EventCode'] : void 0);\n        }\n      }\n      return {\n        activities: activities,\n        status: status\n      };\n    };\n\n    PrestigeClient.prototype.getEta = function(shipment) {\n      var eta, _ref, _ref1;\n      eta = shipment != null ? (_ref = shipment['TrackingEventHistory']) != null ? (_ref1 = _ref[0]) != null ? _ref1['EstimatedDeliveryDate'] : void 0 : void 0 : void 0;\n      if (!(eta != null ? eta.length : void 0)) {\n        return;\n      }\n      eta = \"\" + eta + \" 00:00 +00:00\";\n      return moment(eta, 'MM/DD/YYYY HH:mm ZZ').toDate();\n    };\n\n    PrestigeClient.prototype.getService = function(shipment) {};\n\n    PrestigeClient.prototype.getWeight = function(shipment) {\n      var piece, units, weight, _ref;\n      if (!(shipment != null ? (_ref = shipment['Pieces']) != null ? _ref.length : void 0 : void 0)) {\n        return;\n      }\n      piece = shipment['Pieces'][0];\n      weight = \"\" + piece['Weight'];\n      units = piece['WeightUnit'];\n      if (units != null) {\n        weight = \"\" + weight + \" \" + units;\n      }\n      return weight;\n    };\n\n    PrestigeClient.prototype.getDestination = function(shipment) {\n      var _ref;\n      return this.presentAddress('PD', shipment != null ? (_ref = shipment['TrackingEventHistory']) != null ? _ref[0] : void 0 : void 0);\n    };\n\n    PrestigeClient.prototype.requestOptions = function(_arg) {\n      var trackingNumber;\n      trackingNumber = _arg.trackingNumber;\n      return {\n        method: 'GET',\n        uri: \"http://www.prestigedelivery.com/TrackingHandler.ashx?trackingNumbers=\" + trackingNumber\n      };\n    };\n\n    return PrestigeClient;\n\n  })(ShipperClient);\n\n  module.exports = {\n    PrestigeClient: PrestigeClient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/guessCarrier.js":"(function() {\n  var CARRIERS, uniq, upperCase, _checkDigit, _confirmA1International, _confirmCanadaPost16, _confirmFedex12, _confirmFedex15, _confirmFedex20, _confirmFedex9622, _confirmFedexDoorTag, _confirmFedexSmartPost, _confirmUps, _confirmUpsFreight, _confirmUsps20, _confirmUsps22, _confirmUsps26, _confirmUsps420Zip, _confirmUsps420ZipPlus4, _preprocess;\n\n  upperCase = require('change-case').upperCase;\n\n  uniq = require('underscore').uniq;\n\n  _preprocess = function(trk) {\n    return upperCase(trk.replace(/\\s+/g, ''));\n  };\n\n  _confirmUps = function(trk) {\n    var asciiValue, checkdigit, index, num, sum, _i;\n    sum = 0;\n    for (index = _i = 2; _i <= 16; index = ++_i) {\n      asciiValue = trk[index].charCodeAt(0);\n      if (asciiValue >= 48 && asciiValue <= 57) {\n        num = parseInt(trk[index], 10);\n      } else {\n        num = (asciiValue - 63) % 10;\n      }\n      if (index % 2 !== 0) {\n        num = num * 2;\n      }\n      sum += num;\n    }\n    checkdigit = sum % 10 > 0 ? 10 - sum % 10 : 0;\n    if (checkdigit === parseInt(trk[17], 10)) {\n      return [true, true];\n    }\n    return [false, false];\n  };\n\n  _checkDigit = function(trk, multipliers, mod) {\n    var checkdigit, index, midx, sum, _i, _ref;\n    midx = 0;\n    sum = 0;\n    for (index = _i = 0, _ref = trk.length - 2; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {\n      sum += parseInt(trk[index], 10) * multipliers[midx];\n      midx = midx === multipliers.length - 1 ? 0 : midx + 1;\n    }\n    if (mod === 11) {\n      checkdigit = sum % 11;\n      if (checkdigit === 10) {\n        checkdigit = 0;\n      }\n    }\n    if (mod === 10) {\n      checkdigit = 0;\n      if ((sum % 10) > 0) {\n        checkdigit = 10 - sum % 10;\n      }\n    }\n    return checkdigit === parseInt(trk[trk.length - 1]);\n  };\n\n  _confirmUpsFreight = function(trk) {\n    var firstChar, remaining;\n    firstChar = \"\" + ((trk.charCodeAt(0) - 63) % 10);\n    remaining = trk.slice(1);\n    trk = \"\" + firstChar + remaining;\n    if (_checkDigit(trk, [3, 1, 7], 10)) {\n      return [true, true];\n    }\n    return [false, false];\n  };\n\n  _confirmFedex12 = function(trk) {\n    if (_checkDigit(trk, [3, 1, 7], 11)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmFedexDoorTag = function(trk) {\n    if (_checkDigit(trk.match(/^DT(\\d{12})$/)[1], [3, 1, 7], 11)) {\n      return [true, true];\n    }\n    return [false, false];\n  };\n\n  _confirmFedexSmartPost = function(trk) {\n    if (_checkDigit(\"91\" + trk, [3, 1], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmFedex15 = function(trk) {\n    if (_checkDigit(trk, [1, 3], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmFedex20 = function(trk) {\n    var alteredTrk;\n    if (_checkDigit(trk, [3, 1, 7], 11)) {\n      return [true, false];\n    } else {\n      alteredTrk = \"92\" + trk;\n      if (_checkDigit(alteredTrk, [3, 1], 10)) {\n        return [true, false];\n      }\n    }\n    return [false, false];\n  };\n\n  _confirmUsps20 = function(trk) {\n    if (_checkDigit(trk, [3, 1], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmFedex9622 = function(trk) {\n    if (_checkDigit(trk, [3, 1, 7], 11)) {\n      return [true, false];\n    }\n    if (_checkDigit(trk.slice(7), [1, 3], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmUsps22 = function(trk) {\n    if (_checkDigit(trk, [3, 1], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmUsps26 = function(trk) {\n    if (_checkDigit(trk, [3, 1], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmUsps420Zip = function(trk) {\n    if (_checkDigit(trk.match(/^420\\d{5}(\\d{22})$/)[1], [3, 1], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmUsps420ZipPlus4 = function(trk) {\n    if (_checkDigit(trk.match(/^420\\d{9}(\\d{22})$/)[1], [3, 1], 10)) {\n      return [true, false];\n    } else {\n      if (_checkDigit(trk.match(/^420\\d{5}(\\d{26})$/)[1], [3, 1], 10)) {\n        return [true, false];\n      }\n    }\n    return [false, false];\n  };\n\n  _confirmCanadaPost16 = function(trk) {\n    if (_checkDigit(trk, [3, 1], 10)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  _confirmA1International = function(trk) {\n    if ((trk.length === 9) || (trk.length === 13)) {\n      return [true, false];\n    }\n    return [false, false];\n  };\n\n  CARRIERS = [\n    {\n      name: 'ups',\n      regex: /^1Z[0-9A-Z]{16}$/,\n      confirm: _confirmUps\n    }, {\n      name: 'ups',\n      regex: /^(H|T|J|K|F|W|M|Q|A)\\d{10}$/,\n      confirm: _confirmUpsFreight\n    }, {\n      name: 'amazon',\n      regex: /^1\\d{2}-\\d{7}-\\d{7}:\\d{13}$/\n    }, {\n      name: 'fedex',\n      regex: /^\\d{12}$/,\n      confirm: _confirmFedex12\n    }, {\n      name: 'fedex',\n      regex: /^\\d{15}$/,\n      confirm: _confirmFedex15\n    }, {\n      name: 'fedex',\n      regex: /^\\d{20}$/,\n      confirm: _confirmFedex20\n    }, {\n      name: 'usps',\n      regex: /^\\d{20}$/,\n      confirm: _confirmUsps20\n    }, {\n      name: 'usps',\n      regex: /^02\\d{18}$/,\n      confirm: _confirmFedexSmartPost\n    }, {\n      name: 'fedex',\n      regex: /^02\\d{18}$/,\n      confirm: _confirmFedexSmartPost\n    }, {\n      name: 'fedex',\n      regex: /^DT\\d{12}$/,\n      confirm: _confirmFedexDoorTag\n    }, {\n      name: 'fedex',\n      regex: /^927489\\d{16}$/\n    }, {\n      name: 'fedex',\n      regex: /^926129\\d{16}$/\n    }, {\n      name: 'upsmi',\n      regex: /^927489\\d{16}$/\n    }, {\n      name: 'upsmi',\n      regex: /^926129\\d{16}$/\n    }, {\n      name: 'upsmi',\n      regex: /^927489\\d{20}$/\n    }, {\n      name: 'fedex',\n      regex: /^96\\d{20}$/,\n      confirm: _confirmFedex9622\n    }, {\n      name: 'usps',\n      regex: /^927489\\d{16}$/\n    }, {\n      name: 'usps',\n      regex: /^926129\\d{16}$/\n    }, {\n      name: 'fedex',\n      regex: /^7489\\d{16}$/\n    }, {\n      name: 'fedex',\n      regex: /^6129\\d{16}$/\n    }, {\n      name: 'usps',\n      regex: /^(91|92|93|94|95|96)\\d{20}$/,\n      confirm: _confirmUsps22\n    }, {\n      name: 'usps',\n      regex: /^\\d{26}$/,\n      confirm: _confirmUsps26\n    }, {\n      name: 'usps',\n      regex: /^420\\d{27}$/,\n      confirm: _confirmUsps420Zip\n    }, {\n      name: 'usps',\n      regex: /^420\\d{31}$/,\n      confirm: _confirmUsps420ZipPlus4\n    }, {\n      name: 'dhlgm',\n      regex: /^420\\d{27}$/,\n      confirm: _confirmUsps420Zip\n    }, {\n      name: 'dhlgm',\n      regex: /^420\\d{31}$/,\n      confirm: _confirmUsps420ZipPlus4\n    }, {\n      name: 'dhlgm',\n      regex: /^94748\\d{17}$/,\n      confirm: _confirmUsps22\n    }, {\n      name: 'dhlgm',\n      regex: /^93612\\d{17}$/,\n      confirm: _confirmUsps22\n    }, {\n      name: 'dhlgm',\n      regex: /^GM\\d{16}/\n    }, {\n      name: 'usps',\n      regex: /^[A-Z]{2}\\d{9}[A-Z]{2}$/\n    }, {\n      name: 'canadapost',\n      regex: /^\\d{16}$/,\n      confirm: _confirmCanadaPost16\n    }, {\n      name: 'lasership',\n      regex: /^L[A-Z]\\d{8}$/\n    }, {\n      name: 'lasership',\n      regex: /^1LS\\d{12}/\n    }, {\n      name: 'lasership',\n      regex: /^Q\\d{8}[A-Z]/\n    }, {\n      name: 'ontrac',\n      regex: /^(C|D)\\d{14}$/\n    }, {\n      name: 'prestige',\n      regex: /^P[A-Z]{1}\\d{8}/\n    }, {\n      name: 'a1intl',\n      regex: /^AZ.\\d+/,\n      confirm: _confirmA1International\n    }\n  ];\n\n  module.exports = function(trk) {\n    var carriers;\n    carriers = [];\n    trk = _preprocess(trk);\n    CARRIERS.every(function(c) {\n      var good, stop, _ref;\n      if (trk.match(c.regex)) {\n        if (c.confirm != null) {\n          _ref = c.confirm(trk), good = _ref[0], stop = _ref[1];\n          if (good) {\n            carriers.push(c.name);\n          }\n          return !stop;\n        }\n        carriers.push(c.name);\n        return true;\n      }\n      return true;\n    });\n    return uniq(carriers);\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-shipit/node_modules/shipit/lib/checkdigit.js":"(function() {\n  var _checkDigit;\n\n  _checkDigit = function(trk, multipliers, mod) {\n    var checkdigit, index, midx, sum, _i, _ref;\n    midx = 0;\n    sum = 0;\n    for (index = _i = 0, _ref = trk.length - 2; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {\n      sum += parseInt(trk[index], 10) * multipliers[midx];\n      midx = midx === multipliers.length - 1 ? 0 : midx + 1;\n    }\n    if (mod === 11) {\n      checkdigit = sum % 11;\n      if (checkdigit === 10) {\n        checkdigit = 0;\n      }\n    }\n    if (mod === 10) {\n      checkdigit = 0;\n      if ((sum % 10) > 0) {\n        checkdigit = 10 - sum % 10;\n      }\n    }\n    return checkdigit === parseInt(trk[trk.length - 1]);\n  };\n\n  module.exports = _checkDigit;\n\n}).call(this);\n"}